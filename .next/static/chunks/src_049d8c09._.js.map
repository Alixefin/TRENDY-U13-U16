{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          \"[&::file-selector-button]:mr-2 [&::file-selector-button]:border-none [&::file-selector-button]:bg-primary/10 [&::file-selector-button]:text-primary [&::file-selector-button]:rounded-md [&::file-selector-button]:px-2 [&::file-selector-button]:py-1 hover:[&::file-selector-button]:bg-primary/20\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["\nimport { createClient, type SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase'; // We will create this file later for types\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Helper type for the mock client's error structure\ntype MockError = { message: string; details: string; hint: string; code: string } | null;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `Supabase URL or anon key is missing. \n      Please check your .env.local file and ensure NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set.\n      Falling back to a mock client for development purposes. NO DATA WILL BE SAVED.`\n    );\n\n    const mockSupabase = {\n      from: (tableName: string) => {\n        let currentError: MockError = { message: `Mock Supabase: Query on ${tableName} - no connection`, details: '', hint: '', code: '' };\n        let currentData: any = []; // Default to array for multi-row select\n        let isSingleQuery = false;\n\n        const builder = {\n          select: function(columns: string = '*') {\n            // console.warn(`Mock Supabase: .select(\"${columns}\") called on ${tableName}`);\n            currentData = isSingleQuery ? null : [];\n            currentError = { message: `Mock Supabase: select on ${tableName} - no connection`, details: '', hint: '', code: '' };\n            if (isSingleQuery && currentData === null) {\n              currentError.message = `Mock Supabase: single select on ${tableName} - no connection`;\n            }\n            return this;\n          },\n          insert: function(rowData: any) {\n            // console.warn(`Mock Supabase: .insert() called on ${tableName}`);\n            // For insert().select().single(), Supabase returns the inserted object (or first if array)\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null; // Simulate successful insert for mock\n            isSingleQuery = true; // insert().select().single() implies single result\n            return this;\n          },\n          update: function(rowData: any) {\n            // console.warn(`Mock Supabase: .update() called on ${tableName}`);\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null;\n            isSingleQuery = true;\n            return this;\n          },\n          delete: function() {\n            // console.warn(`Mock Supabase: .delete() called on ${tableName}`);\n            currentData = []; // Supabase delete often returns the deleted items\n            currentError = null;\n            isSingleQuery = false; // delete can affect multiple, but select might follow\n            return this;\n          },\n          order: function(column: string, options?: { ascending?: boolean; nullsFirst?: boolean }) {\n            console.warn(`Mock Supabase: .order() called on ${tableName} for ${column}. Data will not actually be ordered.`);\n            return this;\n          },\n          eq: function(column: string, value: any) {\n            console.warn(`Mock Supabase: .eq() called on ${tableName} for ${column}=${value}. Data will not actually be filtered.`);\n            // if (isSingleQuery) { // If .single() was called before .eq(), this might adjust currentData based on a mock scenario\n            //    currentData = null; // Reset if filter means no match\n            // }\n            return this;\n          },\n          single: function() {\n            // console.warn(`Mock Supabase: .single() called on ${tableName}`);\n            isSingleQuery = true;\n            currentData = null; \n            currentError = { message: `Mock Supabase: single select on ${tableName} - no record found or connection error`, details: '', hint: '', code: '' };\n            return this;\n          },\n          // Make the builder thenable (awaitable)\n          then: function(onFulfilled: (value: { data: any; error: MockError; }) => void, onRejected?: (reason: any) => void) {\n            let resultData = isSingleQuery ? currentData : currentData;\n            if (isSingleQuery && resultData === undefined) resultData = null;\n            if (!isSingleQuery && resultData === undefined) resultData = [];\n            \n            // if single and error, data should be null (Supabase behavior)\n            if(isSingleQuery && currentError && resultData !== null) {\n                 // resultData = null; // Be careful with this, as sometimes Supabase returns partial data + error\n            }\n\n            const result = { data: resultData, error: currentError };\n            // console.log(`Mock promise for ${tableName} resolving with:`, JSON.stringify(result));\n            return Promise.resolve(result).then(onFulfilled, onRejected);\n          },\n          catch: function(onRejected: (reason: any) => void) {\n            // Ensure then is defined if catch is called directly on the builder.\n            // This is a simplified catch. A full promise implementation would be more complex.\n            return this.then(undefined, onRejected);\n          }\n        };\n        return builder;\n      },\n      storage: {\n        from: (bucket: string) => ({\n            upload: async (path: string, file: File | Blob, options?: any) => {\n                 console.warn(`Mock Supabase Storage: .upload() called for bucket ${bucket}. File will not be uploaded.`);\n                 return ({ data: { path: `mock/${bucket}/${path}` }, error: null });\n            },\n            getPublicUrl: (path: string) => {\n                console.warn(`Mock Supabase Storage: .getPublicUrl() called for path ${path} in bucket ${bucket}.`);\n                return ({ data: { publicUrl: `https://placehold.co/128x128.png?text=MOCK` } });\n            },\n        }),\n      }\n    };\n    globalThis.supabaseClientInstance = mockSupabase as any as SupabaseClient<Database>;\n  } else {\n    throw new Error(\"Supabase URL and anon key are required. Application cannot start in production without them.\");\n  }\n} else {\n   globalThis.supabaseClientInstance = createClient<Database>(supabaseUrl, supabaseAnonKey);\n}\n\nexport const supabase = globalThis.supabaseClientInstance;\n"],"names":[],"mappings":";;;AAIoB;AAHpB;;AAGA,MAAM;AACN,MAAM;AAKN,uCAAsC;;AA0GtC,OAAO;IACJ,WAAW,sBAAsB,GAAG,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC3E;AAEO,MAAM,WAAW,WAAW,sBAAsB","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\nimport type { Team, Match, Group, TournamentInfo, Player, GoalEvent, CardEvent, MatchEvent, SupabaseMatch, GroupTeam } from '@/types';\nimport { supabase } from './supabaseClient';\n\nexport const placeholderTeamLogo = (name: string): string => {\n  const initials = name.length >= 2 ? name.substring(0, 2).toUpperCase() : name.substring(0,1).toUpperCase() + (name.length > 1 ? name.substring(1,1) : '');\n  return `https://placehold.co/128x128/FFFFFF/50C878.png?text=${initials}&font=poppins`;\n}\n\n// Helper function to map Supabase team data (potentially with players) to local Team type\nconst mapSupabaseTeamToLocalUser = (supabaseTeam: any, players: Player[] = []): Team => {\n  return {\n    id: supabaseTeam.id,\n    name: supabaseTeam.name,\n    coachName: supabaseTeam.coach_name || 'N/A',\n    logoUrl: supabaseTeam.logo_url || placeholderTeamLogo(supabaseTeam.name),\n    players: players.map(p => ({\n        id: p.id,\n        name: p.name,\n        shirt_number: p.shirt_number, // Ensure this matches the type\n        team_id: p.team_id,\n        created_at: p.created_at\n    })),\n  };\n};\n\n// Refactored to fetch a single match by ID from Supabase for user-facing page\nexport const getMatchById = async (id: string): Promise<Match | null | undefined> => {\n  const { data: matchData, error } = await supabase\n    .from('matches')\n    .select(`\n      id,\n      date_time,\n      venue,\n      status,\n      score_a,\n      score_b,\n      events,\n      lineup_a_player_ids,\n      lineup_b_player_ids,\n      teamA:team_a_id (id, name, logo_url, coach_name, players (id, name, shirt_number, team_id, created_at)),\n      teamB:team_b_id (id, name, logo_url, coach_name, players (id, name, shirt_number, team_id, created_at))\n    `)\n    .eq('id', id)\n    .single();\n\n  if (error) {\n    console.error(`Error fetching match by ID (${id}):`, error.message);\n    if (error.code === 'PGRST116') return null; // PostgREST error for \"JSON object requested, multiple (or no) rows returned\"\n    return undefined; // Other errors\n  }\n  if (!matchData) return null;\n\n  // Type assertion for teamA and teamB based on the select query structure\n  const teamARaw = matchData.teamA as any;\n  const teamBRaw = matchData.teamB as any;\n\n  const teamA: Team = teamARaw ? \n    mapSupabaseTeamToLocalUser(teamARaw, (teamARaw.players as Player[] || [])) : \n    { id: 'unknownA', name: 'Unknown Team A', logoUrl: placeholderTeamLogo('?'), coachName: 'N/A', players: [] };\n\n  const teamB: Team = teamBRaw ? \n    mapSupabaseTeamToLocalUser(teamBRaw, (teamBRaw.players as Player[] || [])) : \n    { id: 'unknownB', name: 'Unknown Team B', logoUrl: placeholderTeamLogo('?'), coachName: 'N/A', players: [] };\n\n  // Determine lineups\n  let lineupA: Player[] = [];\n  if (matchData.lineup_a_player_ids && teamA.players.length > 0) {\n    const lineupIds = new Set(matchData.lineup_a_player_ids);\n    lineupA = teamA.players.filter(p => lineupIds.has(p.id));\n  } else if (teamA.players.length > 0) {\n    // Fallback lineup if specific IDs not provided or players not fetched properly\n    // lineupA = teamA.players.slice(0, 11);\n  }\n  \n  let lineupB: Player[] = [];\n  if (matchData.lineup_b_player_ids && teamB.players.length > 0) {\n     const lineupIds = new Set(matchData.lineup_b_player_ids);\n     lineupB = teamB.players.filter(p => lineupIds.has(p.id));\n  } else if (teamB.players.length > 0) {\n    // lineupB = teamB.players.slice(0, 11);\n  }\n\n\n  return {\n    id: matchData.id,\n    teamA,\n    teamB,\n    dateTime: new Date(matchData.date_time),\n    venue: matchData.venue || 'N/A',\n    status: matchData.status as 'scheduled' | 'live' | 'completed',\n    scoreA: matchData.score_a ?? undefined,\n    scoreB: matchData.score_b ?? undefined,\n    events: (matchData.events as MatchEvent[] | null) || [],\n    lineupA,\n    lineupB,\n  };\n};\n\n\n// Fallback Tournament Info for components not yet refactored or if Supabase fails.\nexport const mockTournamentInfo: TournamentInfo = {\n  id: 1, \n  name: \"Tournament Tracker (Fallback)\",\n  logoUrl: placeholderTeamLogo('TT'),\n  about: \"Fallback tournament description. Configure in admin panel.\",\n  knockoutImageUrl: `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/groups/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport Image from 'next/image';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Trophy, PlusCircle, Users2, Loader2 } from 'lucide-react';\nimport { mockGroups as initialGroups } from '@/lib/data'; // Groups still from mock for now\nimport type { Group, Team, GroupTeam } from '@/types';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { supabase } from '@/lib/supabaseClient';\nimport { placeholderTeamLogo } from '@/lib/data';\n\n\nconst groupSchema = z.object({\n  name: z.string().min(1, { message: \"Group name cannot be empty.\" }),\n});\ntype GroupFormValues = z.infer<typeof groupSchema>;\n\nconst assignTeamSchema = z.object({\n  groupId: z.string().min(1, \"Please select a group.\"),\n  teamId: z.string().min(1, \"Please select a team to assign.\"),\n});\ntype AssignTeamFormValues = z.infer<typeof assignTeamSchema>;\n\nexport default function AdminGroupsPage() {\n  const [groups, setGroups] = useState<Group[]>(initialGroups); // Groups still mock\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [isLoadingTeams, setIsLoadingTeams] = useState(true);\n  const [isSubmittingGroup, setIsSubmittingGroup] = useState(false);\n  const [isSubmittingAssignment, setIsSubmittingAssignment] = useState(false);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const fetchTeams = async () => {\n      setIsLoadingTeams(true);\n      const { data: teamsData, error: teamsError } = await supabase\n        .from('teams')\n        .select('id, name, logo_url, coach_name, players (id, name, shirt_number, team_id)'); // Fetch players too\n\n      if (teamsError) {\n        console.error('Error fetching teams:', teamsError);\n        toast({ variant: \"destructive\", title: \"Error fetching teams\", description: teamsError.message });\n        setTeams([]);\n      } else {\n        const fetchedTeams = teamsData?.map(t => ({\n            id: t.id,\n            name: t.name,\n            logoUrl: t.logo_url || placeholderTeamLogo(t.name),\n            coachName: t.coach_name || 'N/A',\n            players: (t.players as Player[] || []),\n        })) || [];\n        setTeams(fetchedTeams);\n      }\n      setIsLoadingTeams(false);\n    };\n    fetchTeams();\n  }, [toast]);\n\n\n  const groupForm = useForm<GroupFormValues>({\n    resolver: zodResolver(groupSchema),\n    defaultValues: { name: '' },\n  });\n\n  const assignTeamForm = useForm<AssignTeamFormValues>({\n    resolver: zodResolver(assignTeamSchema),\n    defaultValues: { groupId: '', teamId: '' },\n  });\n\n  // TODO: Refactor group creation to use Supabase\n  const onGroupSubmit: SubmitHandler<GroupFormValues> = (data) => {\n    setIsSubmittingGroup(true);\n    // Simulating Supabase insert for now\n    const newGroup: Group = {\n      id: `group-${Date.now()}`, // Temporary ID\n      name: data.name,\n      teams: [],\n    };\n    setGroups(prevGroups => [...prevGroups, newGroup]);\n    toast({ title: \"Group Created (Locally)\", description: `Group \"${data.name}\" has been successfully created. Supabase integration pending.` });\n    groupForm.reset();\n    setIsSubmittingGroup(false);\n  };\n\n  // TODO: Refactor team assignment to use Supabase (group_teams table)\n  const onAssignTeamSubmit: SubmitHandler<AssignTeamFormValues> = (data) => {\n    setIsSubmittingAssignment(true);\n    const targetGroup = groups.find(g => g.id === data.groupId);\n    const targetTeam = teams.find(t => t.id === data.teamId);\n\n    if (!targetGroup || !targetTeam) {\n      toast({ variant: \"destructive\", title: \"Error\", description: \"Selected group or team not found.\" });\n      setIsSubmittingAssignment(false);\n      return;\n    }\n    \n    if (targetGroup.teams.some(gt => gt.team.id === targetTeam.id)) {\n      toast({ variant: \"destructive\", title: \"Error\", description: `${targetTeam.name} is already in ${targetGroup.name}.` });\n      setIsSubmittingAssignment(false);\n      return;\n    }\n\n    const newGroupTeam: GroupTeam = {\n      team: targetTeam,\n      played: 0, won: 0, drawn: 0, lost: 0,\n      goalsFor: 0, goalsAgainst: 0, goalDifference: 0, points: 0,\n    };\n\n    setGroups(prevGroups =>\n      prevGroups.map(group =>\n        group.id === data.groupId\n          ? { ...group, teams: [...group.teams, newGroupTeam] }\n          : group\n      )\n    );\n    toast({ title: \"Team Assigned (Locally)\", description: `${targetTeam.name} assigned to ${targetGroup.name}. Supabase integration pending.` });\n    assignTeamForm.reset();\n    setIsSubmittingAssignment(false);\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl font-headline font-bold flex items-center\">\n          <Trophy className=\"mr-3 h-8 w-8\" /> Manage Groups\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Create tournament groups and assign teams to them. Teams are fetched from Supabase. Group data is local.\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\"><PlusCircle className=\"mr-2 h-5 w-5\" />Create New Group</CardTitle>\n            <CardDescription>Add a new group to the tournament structure. (Local state for now)</CardDescription>\n          </CardHeader>\n          <Form {...groupForm}>\n            <form onSubmit={groupForm.handleSubmit(onGroupSubmit)}>\n              <CardContent>\n                <FormField\n                  control={groupForm.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Group Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Group C\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n              <CardFooter>\n                <Button type=\"submit\" disabled={isSubmittingGroup}>\n                  {isSubmittingGroup ? \"Creating...\" : \"Create Group (Local)\"}\n                </Button>\n              </CardFooter>\n            </form>\n          </Form>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\"><Users2 className=\"mr-2 h-5 w-5\" />Assign Team to Group</CardTitle>\n            <CardDescription>Add a team to an existing group. (Local state for now)</CardDescription>\n          </CardHeader>\n          <Form {...assignTeamForm}>\n            <form onSubmit={assignTeamForm.handleSubmit(onAssignTeamSubmit)}>\n              <CardContent className=\"space-y-4\">\n                <FormField\n                  control={assignTeamForm.control}\n                  name=\"groupId\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Select Group</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value} disabled={groups.length === 0}>\n                        <FormControl>\n                          <SelectTrigger><SelectValue placeholder=\"Choose a group\" /></SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {groups.map(group => (\n                            <SelectItem key={group.id} value={group.id}>{group.name}</SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={assignTeamForm.control}\n                  name=\"teamId\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Select Team</FormLabel>\n                      <Select onValueChange={field.onChange} defaultValue={field.value} disabled={isLoadingTeams || teams.length === 0}>\n                        <FormControl>\n                          <SelectTrigger><SelectValue placeholder={isLoadingTeams? \"Loading teams...\" : \"Choose a team\"} /></SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          {teams.map(team => (\n                            <SelectItem key={team.id} value={team.id}>{team.name}</SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n              <CardFooter>\n                <Button type=\"submit\" disabled={isSubmittingAssignment || isLoadingTeams}>\n                  {isSubmittingAssignment ? \"Assigning...\" : \"Assign Team (Local)\"}\n                </Button>\n              </CardFooter>\n            </form>\n          </Form>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Current Groups & Standings (Local Data)</CardTitle>\n          <CardDescription>Overview of all groups and their assigned teams. Standings are illustrative.</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {isLoadingTeams && groups.length === 0 ? (\n            <div className=\"flex justify-center items-center py-8\">\n              <Loader2 className=\"h-6 w-6 animate-spin mr-2\" />\n              <p className=\"text-muted-foreground\">Loading team data and initializing groups...</p>\n            </div>\n          ) : groups.length === 0 ? (\n            <p className=\"text-center text-muted-foreground py-8\">No groups created yet.</p>\n          ) : (\n            groups.map(group => (\n              <div key={group.id}>\n                <h3 className=\"text-xl font-semibold mb-2 font-headline\">{group.name}</h3>\n                {group.teams.length === 0 ? (\n                  <p className=\"text-sm text-muted-foreground pl-2\">No teams assigned to this group yet.</p>\n                ) : (\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"w-[60px]\">Logo</TableHead>\n                      <TableHead>Team</TableHead>\n                      <TableHead className=\"text-center\">P</TableHead>\n                      <TableHead className=\"text-center\">W</TableHead>\n                      <TableHead className=\"text-center\">D</TableHead>\n                      <TableHead className=\"text-center\">L</TableHead>\n                      <TableHead className=\"text-center\">GF</TableHead>\n                      <TableHead className=\"text-center\">GA</TableHead>\n                      <TableHead className=\"text-center\">GD</TableHead>\n                      <TableHead className=\"text-center\">Pts</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {group.teams\n                      .sort((a, b) => b.points - a.points || (b.goalsFor - b.goalsAgainst) - (a.goalsFor - a.goalsAgainst) || b.goalsFor - a.goalsFor)\n                      .map(gt => (\n                      <TableRow key={gt.team.id}>\n                        <TableCell>\n                          <Image src={gt.team.logoUrl} alt={gt.team.name} width={24} height={24} className=\"rounded-full\" data-ai-hint=\"team logo\" />\n                        </TableCell>\n                        <TableCell className=\"font-medium\">{gt.team.name}</TableCell>\n                        <TableCell className=\"text-center\">{gt.played}</TableCell>\n                        <TableCell className=\"text-center\">{gt.won}</TableCell>\n                        <TableCell className=\"text-center\">{gt.drawn}</TableCell>\n                        <TableCell className=\"text-center\">{gt.lost}</TableCell>\n                        <TableCell className=\"text-center\">{gt.goalsFor}</TableCell>\n                        <TableCell className=\"text-center\">{gt.goalsAgainst}</TableCell>\n                        <TableCell className=\"text-center\">{gt.goalDifference}</TableCell>\n                        <TableCell className=\"text-center font-semibold\">{gt.points}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n                )}\n              </div>\n            ))\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}