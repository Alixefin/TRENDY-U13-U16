{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          \"[&::file-selector-button]:mr-2 [&::file-selector-button]:border-none [&::file-selector-button]:bg-primary/10 [&::file-selector-button]:text-primary [&::file-selector-button]:rounded-md [&::file-selector-button]:px-2 [&::file-selector-button]:py-1 hover:[&::file-selector-button]:bg-primary/20\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\nimport type { Team, Match, Group, TournamentInfo, Player, GoalEvent, CardEvent } from '@/types';\n\nexport const placeholderTeamLogo = (name: string) => `https://placehold.co/128x128/FFFFFF/50C878.png?text=${name.substring(0,2).toUpperCase()}&font=poppins`;\n\nconst createPlayer = (id: string, name: string, shirtNumber: number, team_id: string): Player => ({ id, name, shirt_number: shirtNumber, team_id });\n\n// Mock teams for user-facing components - Admin panel fetches from Supabase.\nexport const exampleTeamsForUserDisplay: Team[] = [\n  {\n    id: 'user-team1',\n    name: 'Green Lions (User)',\n    logoUrl: placeholderTeamLogo('GL'),\n    coachName: 'Coach Arthur',\n    players: [\n      createPlayer('user-p1', 'Leo Green', 10, 'user-team1'),\n      createPlayer('user-p2', 'Sam Stripes', 7, 'user-team1'),\n    ],\n  },\n  {\n    id: 'user-team2',\n    name: 'Blue Eagles (User)',\n    logoUrl: placeholderTeamLogo('BE'),\n    coachName: 'Coach Bella',\n    players: [\n      createPlayer('user-p6', 'Eva Blue', 10, 'user-team2'),\n    ],\n  },\n   {\n    id: 'user-team3',\n    name: 'Red Dragons (User)',\n    logoUrl: placeholderTeamLogo('RD'),\n    coachName: 'Coach Drake',\n    players: [createPlayer('user-p11', 'Ruby Fire', 9, 'user-team3')],\n  },\n  {\n    id: 'user-team4',\n    name: 'Yellow Hornets (User)',\n    logoUrl: placeholderTeamLogo('YH'),\n    coachName: 'Coach Stinger',\n    players: [createPlayer('user-p16', 'Buzz Gold', 10, 'user-team4')],\n  },\n];\n\n\nconst now = new Date();\n\n// Mock matches for user-facing components. Admin panel fetches from Supabase.\nexport const mockMatches: Match[] = [\n  {\n    id: 'match1-user',\n    teamA: exampleTeamsForUserDisplay[0],\n    teamB: exampleTeamsForUserDisplay[1],\n    dateTime: new Date(now.getTime() + 2 * 60 * 60 * 1000),\n    venue: 'Stadium Alpha (User)',\n    status: 'scheduled',\n    events: [],\n  },\n  {\n    id: 'match2-user',\n    teamA: exampleTeamsForUserDisplay[2],\n    teamB: exampleTeamsForUserDisplay[3],\n    dateTime: new Date(now.getTime() - 15 * 60 * 1000),\n    venue: 'Stadium Beta (User)',\n    status: 'live',\n    scoreA: 1,\n    scoreB: 0,\n    lineupA: exampleTeamsForUserDisplay[2].players.slice(0, 5),\n    lineupB: exampleTeamsForUserDisplay[3].players.slice(0, 5),\n    events: [\n      { id: 'e1-user', type: 'goal', time: \"10'\", playerName: 'Ruby Fire', playerId: 'user-p11', teamId: 'user-team3' } as GoalEvent,\n    ],\n  },\n  {\n    id: 'match3-user',\n    teamA: exampleTeamsForUserDisplay[0],\n    teamB: exampleTeamsForUserDisplay[2],\n    dateTime: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000),\n    venue: 'Stadium Gamma (User)',\n    status: 'completed',\n    scoreA: 2,\n    scoreB: 1,\n    lineupA: exampleTeamsForUserDisplay[0].players.slice(0, 5),\n    lineupB: exampleTeamsForUserDisplay[2].players.slice(0, 5),\n    events: [\n      { id: 'e2-user', type: 'goal', time: \"25'\", playerName: 'Leo Green', playerId: 'user-p1', teamId: 'user-team1' } as GoalEvent,\n      { id: 'e3-user', type: 'goal', time: \"55'\", playerName: 'Ruby Fire', playerId: 'user-p11', teamId: 'user-team3' } as GoalEvent,\n      { id: 'e4-user', type: 'goal', time: \"80'\", playerName: 'Sam Stripes', playerId: 'user-p2', teamId: 'user-team1' } as GoalEvent,\n      { id: 'e5-user', type: 'card', time: \"60'\", playerName: 'Ken Flame (User)', playerId: 'user-p12placeholder', teamId: 'user-team3', cardType: 'yellow', details: 'Foul tackle' } as CardEvent,\n    ],\n  },\n];\n\n// Fallback Tournament Info for components not yet refactored or if Supabase fails.\n// Admin panel and key user pages fetch live data from Supabase.\nexport const mockTournamentInfo: TournamentInfo = {\n  id: 1, // Default ID\n  name: \"Trendy's U13/U16 Championship (Fallback)\",\n  logoUrl: placeholderTeamLogo('TT'),\n  about: \"Welcome to the most exciting youth championship! Trendy's U13/U16 tournament brings together the best young talents to compete for glory. (This is fallback data).\",\n  knockoutImageUrl: `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`,\n};\n\n// Mock Groups for user-facing components. Admin panel will manage via Supabase eventually.\nexport const mockGroups: Group[] = [\n  {\n    id: 'groupA-user',\n    name: 'Group A (User)',\n    teams: [\n      { team: exampleTeamsForUserDisplay[0], played: 1, won: 1, drawn: 0, lost: 0, goalsFor: 2, goalsAgainst: 1, goalDifference: 1, points: 3 },\n      { team: exampleTeamsForUserDisplay[1], played: 0, won: 0, drawn: 0, lost: 0, goalsFor: 0, goalsAgainst: 0, goalDifference: 0, points: 0 },\n    ],\n  },\n  {\n    id: 'groupB-user',\n    name: 'Group B (User)',\n    teams: [\n      { team: exampleTeamsForUserDisplay[2], played: 1, won: 0, drawn: 0, lost: 1, goalsFor: 1, goalsAgainst: 2, goalDifference: -1, points: 0, isLive: true, liveScore: '1-0 vs YH' },\n      { team: exampleTeamsForUserDisplay[3], played: 0, won: 0, drawn: 0, lost: 0, goalsFor: 0, goalsAgainst: 0, goalDifference: 0, points: 0, isLive: true, liveScore: '0-1 vs RD' },\n    ],\n  },\n];\n\n// This function is used by user-facing match details page. Keep it using mockMatches for now.\nexport const getMatchById = (id: string): Match | undefined => {\n  const match = mockMatches.find(m => m.id === id); \n  if (match) {\n    // Ensure players are attached if not explicitly part of mock match lineups\n    const teamAWithPlayers = exampleTeamsForUserDisplay.find(t => t.id === match.teamA.id) || match.teamA;\n    const teamBWithPlayers = exampleTeamsForUserDisplay.find(t => t.id === match.teamB.id) || match.teamB;\n    \n    return { \n        ...match, \n        teamA: {...teamAWithPlayers, players: teamAWithPlayers.players || []},\n        teamB: {...teamBWithPlayers, players: teamBWithPlayers.players || []},\n        events: match.events || [],\n        lineupA: match.lineupA || teamAWithPlayers.players?.slice(0,11) || [], // Fallback lineup\n        lineupB: match.lineupB || teamBWithPlayers.players?.slice(0,11) || [], // Fallback lineup\n    };\n  }\n  return undefined;\n};\n    \n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,sBAAsB,CAAC,OAAiB,CAAC,oDAAoD,EAAE,KAAK,SAAS,CAAC,GAAE,GAAG,WAAW,GAAG,aAAa,CAAC;AAE5J,MAAM,eAAe,CAAC,IAAY,MAAc,aAAqB,UAA4B,CAAC;QAAE;QAAI;QAAM,cAAc;QAAa;IAAQ,CAAC;AAG3I,MAAM,6BAAqC;IAChD;QACE,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YACP,aAAa,WAAW,aAAa,IAAI;YACzC,aAAa,WAAW,eAAe,GAAG;SAC3C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YACP,aAAa,WAAW,YAAY,IAAI;SACzC;IACH;IACC;QACC,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YAAC,aAAa,YAAY,aAAa,GAAG;SAAc;IACnE;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YAAC,aAAa,YAAY,aAAa,IAAI;SAAc;IACpE;CACD;AAGD,MAAM,MAAM,IAAI;AAGT,MAAM,cAAuB;IAClC;QACE,IAAI;QACJ,OAAO,0BAA0B,CAAC,EAAE;QACpC,OAAO,0BAA0B,CAAC,EAAE;QACpC,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,KAAK,KAAK;QACjD,OAAO;QACP,QAAQ;QACR,QAAQ,EAAE;IACZ;IACA;QACE,IAAI;QACJ,OAAO,0BAA0B,CAAC,EAAE;QACpC,OAAO,0BAA0B,CAAC,EAAE;QACpC,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK;QAC7C,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,QAAQ;YACN;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAa,UAAU;gBAAY,QAAQ;YAAa;SACjH;IACH;IACA;QACE,IAAI;QACJ,OAAO,0BAA0B,CAAC,EAAE;QACpC,OAAO,0BAA0B,CAAC,EAAE;QACpC,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK;QACtD,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,QAAQ;YACN;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAa,UAAU;gBAAW,QAAQ;YAAa;YAC/G;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAa,UAAU;gBAAY,QAAQ;YAAa;YAChH;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAe,UAAU;gBAAW,QAAQ;YAAa;YACjH;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAoB,UAAU;gBAAuB,QAAQ;gBAAc,UAAU;gBAAU,SAAS;YAAc;SAC/K;IACH;CACD;AAIM,MAAM,qBAAqC;IAChD,IAAI;IACJ,MAAM;IACN,SAAS,oBAAoB;IAC7B,OAAO;IACP,kBAAkB,CAAC,iFAAiF,CAAC;AACvG;AAGO,MAAM,aAAsB;IACjC;QACE,IAAI;QACJ,MAAM;QACN,OAAO;YACL;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB;gBAAG,QAAQ;YAAE;YACxI;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB;gBAAG,QAAQ;YAAE;SACzI;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;YACL;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB,CAAC;gBAAG,QAAQ;gBAAG,QAAQ;gBAAM,WAAW;YAAY;YAC/K;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB;gBAAG,QAAQ;gBAAG,QAAQ;gBAAM,WAAW;YAAY;SAC/K;IACH;CACD;AAGM,MAAM,eAAe,CAAC;IAC3B,MAAM,QAAQ,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAC7C,IAAI,OAAO;QACT,2EAA2E;QAC3E,MAAM,mBAAmB,2BAA2B,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK;QACrG,MAAM,mBAAmB,2BAA2B,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK;QAErG,OAAO;YACH,GAAG,KAAK;YACR,OAAO;gBAAC,GAAG,gBAAgB;gBAAE,SAAS,iBAAiB,OAAO,IAAI,EAAE;YAAA;YACpE,OAAO;gBAAC,GAAG,gBAAgB;gBAAE,SAAS,iBAAiB,OAAO,IAAI,EAAE;YAAA;YACpE,QAAQ,MAAM,MAAM,IAAI,EAAE;YAC1B,SAAS,MAAM,OAAO,IAAI,iBAAiB,OAAO,EAAE,MAAM,GAAE,OAAO,EAAE;YACrE,SAAS,MAAM,OAAO,IAAI,iBAAiB,OAAO,EAAE,MAAM,GAAE,OAAO,EAAE;QACzE;IACF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["\nimport { createClient, type SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase'; // We will create this file later for types\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Helper type for the mock client's error structure\ntype MockError = { message: string; details: string; hint: string; code: string } | null;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `Supabase URL or anon key is missing. \n      Please check your .env.local file and ensure NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set.\n      Falling back to a mock client for development purposes. NO DATA WILL BE SAVED.`\n    );\n\n    const mockSupabase = {\n      from: (tableName: string) => {\n        let currentError: MockError = { message: `Mock Supabase: Query on ${tableName} - no connection`, details: '', hint: '', code: '' };\n        let currentData: any = []; // Default to array for multi-row select\n        let isSingleQuery = false;\n\n        const builder = {\n          select: function(columns: string = '*') {\n            // console.warn(`Mock Supabase: .select(\"${columns}\") called on ${tableName}`);\n            currentData = isSingleQuery ? null : [];\n            currentError = { message: `Mock Supabase: select on ${tableName} - no connection`, details: '', hint: '', code: '' };\n            if (isSingleQuery && currentData === null) {\n              currentError.message = `Mock Supabase: single select on ${tableName} - no connection`;\n            }\n            return this;\n          },\n          insert: function(rowData: any) {\n            // console.warn(`Mock Supabase: .insert() called on ${tableName}`);\n            // For insert().select().single(), Supabase returns the inserted object (or first if array)\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null; // Simulate successful insert for mock\n            isSingleQuery = true; // insert().select().single() implies single result\n            return this;\n          },\n          update: function(rowData: any) {\n            // console.warn(`Mock Supabase: .update() called on ${tableName}`);\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null;\n            isSingleQuery = true;\n            return this;\n          },\n          delete: function() {\n            // console.warn(`Mock Supabase: .delete() called on ${tableName}`);\n            currentData = []; // Supabase delete often returns the deleted items\n            currentError = null;\n            isSingleQuery = false; // delete can affect multiple, but select might follow\n            return this;\n          },\n          order: function(column: string, options?: { ascending?: boolean; nullsFirst?: boolean }) {\n            console.warn(`Mock Supabase: .order() called on ${tableName} for ${column}. Data will not actually be ordered.`);\n            return this;\n          },\n          eq: function(column: string, value: any) {\n            console.warn(`Mock Supabase: .eq() called on ${tableName} for ${column}=${value}. Data will not actually be filtered.`);\n            // if (isSingleQuery) { // If .single() was called before .eq(), this might adjust currentData based on a mock scenario\n            //    currentData = null; // Reset if filter means no match\n            // }\n            return this;\n          },\n          single: function() {\n            // console.warn(`Mock Supabase: .single() called on ${tableName}`);\n            isSingleQuery = true;\n            currentData = null; \n            currentError = { message: `Mock Supabase: single select on ${tableName} - no record found or connection error`, details: '', hint: '', code: '' };\n            return this;\n          },\n          // Make the builder thenable (awaitable)\n          then: function(onFulfilled: (value: { data: any; error: MockError; }) => void, onRejected?: (reason: any) => void) {\n            let resultData = isSingleQuery ? currentData : currentData;\n            if (isSingleQuery && resultData === undefined) resultData = null;\n            if (!isSingleQuery && resultData === undefined) resultData = [];\n            \n            // if single and error, data should be null (Supabase behavior)\n            if(isSingleQuery && currentError && resultData !== null) {\n                 // resultData = null; // Be careful with this, as sometimes Supabase returns partial data + error\n            }\n\n            const result = { data: resultData, error: currentError };\n            // console.log(`Mock promise for ${tableName} resolving with:`, JSON.stringify(result));\n            return Promise.resolve(result).then(onFulfilled, onRejected);\n          },\n          catch: function(onRejected: (reason: any) => void) {\n            // Ensure then is defined if catch is called directly on the builder.\n            // This is a simplified catch. A full promise implementation would be more complex.\n            return this.then(undefined, onRejected);\n          }\n        };\n        return builder;\n      },\n      storage: {\n        from: (bucket: string) => ({\n            upload: async (path: string, file: File | Blob, options?: any) => {\n                 console.warn(`Mock Supabase Storage: .upload() called for bucket ${bucket}. File will not be uploaded.`);\n                 return ({ data: { path: `mock/${bucket}/${path}` }, error: null });\n            },\n            getPublicUrl: (path: string) => {\n                console.warn(`Mock Supabase Storage: .getPublicUrl() called for path ${path} in bucket ${bucket}.`);\n                return ({ data: { publicUrl: `https://placehold.co/128x128.png?text=MOCK` } });\n            },\n        }),\n      }\n    };\n    globalThis.supabaseClientInstance = mockSupabase as any as SupabaseClient<Database>;\n  } else {\n    throw new Error(\"Supabase URL and anon key are required. Application cannot start in production without them.\");\n  }\n} else {\n   globalThis.supabaseClientInstance = createClient<Database>(supabaseUrl, supabaseAnonKey);\n}\n\nexport const supabase = globalThis.supabaseClientInstance;\n"],"names":[],"mappings":";;;AAIoB;AAHpB;;AAGA,MAAM;AACN,MAAM;AAKN,uCAAsC;;AA0GtC,OAAO;IACJ,WAAW,sBAAsB,GAAG,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC3E;AAEO,MAAM,WAAW,WAAW,sBAAsB","debugId":null}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/settings/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Image from 'next/image';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, FormDescription } from '@/components/ui/form';\nimport { Settings2, ImagePlus, Loader2 } from 'lucide-react';\nimport { placeholderTeamLogo } from '@/lib/data'; \nimport type { TournamentInfo } from '@/types';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { supabase } from '@/lib/supabaseClient';\n\nconst settingsSchema = z.object({\n  name: z.string().min(5, { message: \"Tournament name must be at least 5 characters.\" }),\n  about: z.string().min(20, { message: \"About section must be at least 20 characters.\" }).nullable(),\n  logoFile: z.instanceof(File).optional(),\n  logoUrl: z.string().url(\"Must be a valid URL or will be auto-generated.\").nullable().optional(),\n  knockoutImageFile: z.instanceof(File).optional(),\n  knockoutImageUrl: z.string().url(\"Must be a valid URL or will be auto-generated.\").nullable().optional(),\n});\n\ntype SettingsFormValues = z.infer<typeof settingsSchema>;\n\nconst defaultTournamentSettings: TournamentInfo = {\n  id: 1,\n  name: \"Trendy's Tournament Tracker\",\n  about: \"Welcome to the tournament! Update this description.\",\n  logoUrl: placeholderTeamLogo('TT'),\n  knockoutImageUrl: `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`,\n};\n\n\nexport default function AdminSettingsPage() {\n  const [tournamentSettings, setTournamentSettings] = useState<TournamentInfo>(defaultTournamentSettings);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  \n  const [tournamentLogoPreview, setTournamentLogoPreview] = useState<string | null>(null);\n  const [knockoutImagePreview, setKnockoutImagePreview] = useState<string | null>(null);\n\n  const form = useForm<SettingsFormValues>({\n    resolver: zodResolver(settingsSchema),\n    defaultValues: {\n      name: defaultTournamentSettings.name,\n      about: defaultTournamentSettings.about,\n      logoUrl: defaultTournamentSettings.logoUrl,\n      knockoutImageUrl: defaultTournamentSettings.knockoutImageUrl,\n    },\n  });\n  \n  const fetchSettings = useCallback(async () => {\n    setIsLoading(true);\n    const { data, error } = await supabase\n      .from('tournament_settings')\n      .select('*')\n      .eq('id', 1)\n      .single();\n\n    if (error || !data) {\n      toast({ variant: \"destructive\", title: \"Failed to load settings\", description: error?.message || \"No settings found. Using defaults.\" });\n      setTournamentSettings(defaultTournamentSettings);\n      form.reset(defaultTournamentSettings);\n      setTournamentLogoPreview(defaultTournamentSettings.logoUrl);\n      setKnockoutImagePreview(defaultTournamentSettings.knockoutImageUrl);\n    } else {\n      const fetchedSettings = data as TournamentInfo;\n      setTournamentSettings(fetchedSettings);\n      form.reset({\n        name: fetchedSettings.name,\n        about: fetchedSettings.about,\n        logoUrl: fetchedSettings.logoUrl,\n        knockoutImageUrl: fetchedSettings.knockoutImageUrl,\n      });\n      setTournamentLogoPreview(fetchedSettings.logoUrl);\n      setKnockoutImagePreview(fetchedSettings.knockoutImageUrl);\n    }\n    setIsLoading(false);\n  }, [toast, form]);\n\n  useEffect(() => {\n    fetchSettings();\n  }, [fetchSettings]);\n\n\n  const handleTournamentLogoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      form.setValue('logoFile', file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setTournamentLogoPreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setTournamentLogoPreview(tournamentSettings.logoUrl); \n      form.setValue('logoFile', undefined);\n    }\n  };\n\n  const handleKnockoutImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      form.setValue('knockoutImageFile', file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setKnockoutImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setKnockoutImagePreview(tournamentSettings.knockoutImageUrl || null); \n      form.setValue('knockoutImageFile', undefined);\n    }\n  };\n\n  const onSubmit: SubmitHandler<SettingsFormValues> = async (data) => {\n    setIsSubmitting(true);\n    \n    let finalLogoUrl = tournamentSettings.logoUrl; // Start with existing URL\n    if (data.logoFile) {\n        const file = data.logoFile;\n        const fileName = `tournament_logo_${Date.now()}.${file.name.split('.').pop()}`;\n        const { data: uploadData, error: uploadError } = await supabase.storage\n            .from('tournament-assets')\n            .upload(fileName, file, { upsert: true });\n\n        if (uploadError) {\n            toast({ variant: \"destructive\", title: \"Logo Upload Failed\", description: uploadError.message });\n            setIsSubmitting(false);\n            return;\n        }\n        const { data: publicUrlData } = supabase.storage.from('tournament-assets').getPublicUrl(uploadData.path);\n        finalLogoUrl = publicUrlData.publicUrl;\n    }\n\n    let finalKnockoutImageUrl = tournamentSettings.knockoutImageUrl; // Start with existing URL\n    if (data.knockoutImageFile) {\n        const file = data.knockoutImageFile;\n        const fileName = `knockout_diagram_${Date.now()}.${file.name.split('.').pop()}`;\n        const { data: uploadData, error: uploadError } = await supabase.storage\n            .from('tournament-assets')\n            .upload(fileName, file, { upsert: true });\n        \n        if (uploadError) {\n            toast({ variant: \"destructive\", title: \"Knockout Image Upload Failed\", description: uploadError.message });\n            setIsSubmitting(false);\n            return;\n        }\n        const { data: publicUrlData } = supabase.storage.from('tournament-assets').getPublicUrl(uploadData.path);\n        finalKnockoutImageUrl = publicUrlData.publicUrl;\n    }\n    \n    const settingsToUpdate = {\n        name: data.name,\n        about: data.about,\n        logo_url: finalLogoUrl || placeholderTeamLogo('TT'), // Fallback for logo\n        knockout_image_url: finalKnockoutImageUrl || `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`, // Fallback for knockout\n        updated_at: new Date().toISOString(),\n    };\n\n    const { data: updatedData, error: updateError } = await supabase\n        .from('tournament_settings')\n        .update(settingsToUpdate)\n        .eq('id', 1)\n        .select()\n        .single();\n\n    if (updateError) {\n        toast({ variant: \"destructive\", title: \"Failed to Update Settings\", description: updateError.message });\n    } else if (updatedData) {\n        setTournamentSettings(updatedData as TournamentInfo);\n        setTournamentLogoPreview(updatedData.logo_url);\n        setKnockoutImagePreview(updatedData.knockout_image_url);\n        toast({ title: \"Settings Updated\", description: \"Tournament information has been saved to Supabase.\" });\n    }\n    setIsSubmitting(false);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-[calc(100vh-10rem)]\">\n        <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n        <p className=\"ml-3 text-lg\">Loading tournament settings...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl font-headline font-bold flex items-center\">\n          <Settings2 className=\"mr-3 h-8 w-8\" /> Tournament Settings\n        </h1>\n        <p className=\"text-muted-foreground\">\n          Update general tournament information, logo, and knockout diagram. Data is stored in Supabase.\n        </p>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>General Information & Branding</CardTitle>\n          <CardDescription>Modify the name, description, logo, and knockout diagram of the tournament.</CardDescription>\n        </CardHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <CardContent className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Tournament Name</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Summer Youth Cup\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"about\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>About Tournament</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Provide a brief description of the tournament...\"\n                        className=\"min-h-[100px]\"\n                        value={field.value ?? \"\"}\n                        onChange={field.onChange}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"logoFile\" \n                render={({ field }) => ( // field is not directly used for value, but needed for RHF state\n                  <FormItem>\n                    <FormLabel>Tournament Logo</FormLabel>\n                    <FormControl>\n                      <Input type=\"file\" accept=\"image/*\" onChange={handleTournamentLogoChange} className=\"[&::file-selector-button]:mr-2 [&::file-selector-button]:border-none [&::file-selector-button]:bg-primary/10 [&::file-selector-button]:text-primary [&::file-selector-button]:rounded-md [&::file-selector-button]:px-2 [&::file-selector-button]:py-1 hover:[&::file-selector-button]:bg-primary/20\" />\n                    </FormControl>\n                    {tournamentLogoPreview && (\n                      <div className=\"mt-2 p-2 border rounded-md inline-block bg-muted/50\">\n                        <Image src={tournamentLogoPreview} alt=\"Tournament logo preview\" width={80} height={80} className=\"rounded-md\" data-ai-hint=\"logo preview\" />\n                      </div>\n                    )}\n                    <FormDescription>Select an image for the tournament logo. Current logo will be kept if no new file is selected.</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"knockoutImageFile\" \n                render={({ field }) => ( // field not directly used\n                  <FormItem>\n                    <FormLabel>Knockout Stage Progression Image</FormLabel>\n                    <FormControl>\n                      <Input type=\"file\" accept=\"image/*\" onChange={handleKnockoutImageChange} className=\"[&::file-selector-button]:mr-2 [&::file-selector-button]:border-none [&::file-selector-button]:bg-primary/10 [&::file-selector-button]:text-primary [&::file-selector-button]:rounded-md [&::file-selector-button]:px-2 [&::file-selector-button]:py-1 hover:[&::file-selector-button]:bg-primary/20\" />\n                    </FormControl>\n                    {knockoutImagePreview && (\n                      <div className=\"mt-2 p-2 border rounded-md inline-block bg-muted/50\">\n                        <Image src={knockoutImagePreview} alt=\"Knockout diagram preview\" width={200} height={120} className=\"rounded-md object-contain\" data-ai-hint=\"diagram preview\" />\n                      </div>\n                    )}\n                    <FormDescription>Upload an image showing the tournament's knockout bracket. Current image will be kept if no new file is selected.</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n            <CardFooter>\n              <Button type=\"submit\" disabled={isSubmitting || isLoading}>\n                {isSubmitting ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\"/> Saving...</> : \"Save Settings\"}\n              </Button>\n            </CardFooter>\n          </form>\n        </Form>\n      </Card>\n       <Card className=\"mt-6\">\n        <CardHeader>\n            <CardTitle>Current Displayed Info (from Supabase)</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-2\">\n            <p><strong>Name:</strong> {tournamentSettings.name}</p>\n            <p><strong>About:</strong> {tournamentSettings.about || 'Not set'}</p>\n            <div>\n                <strong>Logo:</strong>\n                {tournamentSettings.logoUrl ? \n                    <Image src={tournamentSettings.logoUrl} alt=\"Current tournament logo\" width={64} height={64} className=\"mt-1 rounded-md border p-1\" data-ai-hint=\"logo\"/> : \n                    <span className=\"text-muted-foreground\"> Not set</span>}\n            </div>\n             <div>\n                <strong>Knockout Diagram:</strong>\n                {tournamentSettings.knockoutImageUrl ? \n                    <Image src={tournamentSettings.knockoutImageUrl} alt=\"Current knockout diagram\" width={240} height={150} className=\"mt-1 rounded-md border p-1 object-contain\" data-ai-hint=\"diagram\"/> : \n                    <span className=\"text-muted-foreground\"> Not set</span>}\n            </div>\n        </CardContent>\n       </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;;;AAhBA;;;;;;;;;;;;;;;AAkBA,MAAM,iBAAiB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IAC9B,MAAM,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAiD;IACpF,OAAO,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,IAAI;QAAE,SAAS;IAAgD,GAAG,QAAQ;IAChG,UAAU,CAAA,GAAA,uIAAA,CAAA,aAAY,AAAD,EAAE,MAAM,QAAQ;IACrC,SAAS,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,kDAAkD,QAAQ,GAAG,QAAQ;IAC7F,mBAAmB,CAAA,GAAA,uIAAA,CAAA,aAAY,AAAD,EAAE,MAAM,QAAQ;IAC9C,kBAAkB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,kDAAkD,QAAQ,GAAG,QAAQ;AACxG;AAIA,MAAM,4BAA4C;IAChD,IAAI;IACJ,MAAM;IACN,OAAO;IACP,SAAS,CAAA,GAAA,qHAAA,CAAA,sBAAmB,AAAD,EAAE;IAC7B,kBAAkB,CAAC,iFAAiF,CAAC;AACvG;AAGe,SAAS;;IACtB,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAC7E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClF,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhF,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAsB;QACvC,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM,0BAA0B,IAAI;YACpC,OAAO,0BAA0B,KAAK;YACtC,SAAS,0BAA0B,OAAO;YAC1C,kBAAkB,0BAA0B,gBAAgB;QAC9D;IACF;IAEA,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;wDAAE;YAChC,aAAa;YACb,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,uBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,GACT,MAAM;YAET,IAAI,SAAS,CAAC,MAAM;gBAClB,MAAM;oBAAE,SAAS;oBAAe,OAAO;oBAA2B,aAAa,OAAO,WAAW;gBAAqC;gBACtI,sBAAsB;gBACtB,KAAK,KAAK,CAAC;gBACX,yBAAyB,0BAA0B,OAAO;gBAC1D,wBAAwB,0BAA0B,gBAAgB;YACpE,OAAO;gBACL,MAAM,kBAAkB;gBACxB,sBAAsB;gBACtB,KAAK,KAAK,CAAC;oBACT,MAAM,gBAAgB,IAAI;oBAC1B,OAAO,gBAAgB,KAAK;oBAC5B,SAAS,gBAAgB,OAAO;oBAChC,kBAAkB,gBAAgB,gBAAgB;gBACpD;gBACA,yBAAyB,gBAAgB,OAAO;gBAChD,wBAAwB,gBAAgB,gBAAgB;YAC1D;YACA,aAAa;QACf;uDAAG;QAAC;QAAO;KAAK;IAEhB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR;QACF;sCAAG;QAAC;KAAc;IAGlB,MAAM,6BAA6B,CAAC;QAClC,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAI,MAAM;YACR,KAAK,QAAQ,CAAC,YAAY;YAC1B,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,GAAG;gBACjB,yBAAyB,OAAO,MAAM;YACxC;YACA,OAAO,aAAa,CAAC;QACvB,OAAO;YACL,yBAAyB,mBAAmB,OAAO;YACnD,KAAK,QAAQ,CAAC,YAAY;QAC5B;IACF;IAEA,MAAM,4BAA4B,CAAC;QACjC,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAI,MAAM;YACR,KAAK,QAAQ,CAAC,qBAAqB;YACnC,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,GAAG;gBACjB,wBAAwB,OAAO,MAAM;YACvC;YACA,OAAO,aAAa,CAAC;QACvB,OAAO;YACL,wBAAwB,mBAAmB,gBAAgB,IAAI;YAC/D,KAAK,QAAQ,CAAC,qBAAqB;QACrC;IACF;IAEA,MAAM,WAA8C,OAAO;QACzD,gBAAgB;QAEhB,IAAI,eAAe,mBAAmB,OAAO,EAAE,0BAA0B;QACzE,IAAI,KAAK,QAAQ,EAAE;YACf,MAAM,OAAO,KAAK,QAAQ;YAC1B,MAAM,WAAW,CAAC,gBAAgB,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI;YAC9E,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAAC,OAAO,CAClE,IAAI,CAAC,qBACL,MAAM,CAAC,UAAU,MAAM;gBAAE,QAAQ;YAAK;YAE3C,IAAI,aAAa;gBACb,MAAM;oBAAE,SAAS;oBAAe,OAAO;oBAAsB,aAAa,YAAY,OAAO;gBAAC;gBAC9F,gBAAgB;gBAChB;YACJ;YACA,MAAM,EAAE,MAAM,aAAa,EAAE,GAAG,+HAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,YAAY,CAAC,WAAW,IAAI;YACvG,eAAe,cAAc,SAAS;QAC1C;QAEA,IAAI,wBAAwB,mBAAmB,gBAAgB,EAAE,0BAA0B;QAC3F,IAAI,KAAK,iBAAiB,EAAE;YACxB,MAAM,OAAO,KAAK,iBAAiB;YACnC,MAAM,WAAW,CAAC,iBAAiB,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI;YAC/E,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAAC,OAAO,CAClE,IAAI,CAAC,qBACL,MAAM,CAAC,UAAU,MAAM;gBAAE,QAAQ;YAAK;YAE3C,IAAI,aAAa;gBACb,MAAM;oBAAE,SAAS;oBAAe,OAAO;oBAAgC,aAAa,YAAY,OAAO;gBAAC;gBACxG,gBAAgB;gBAChB;YACJ;YACA,MAAM,EAAE,MAAM,aAAa,EAAE,GAAG,+HAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,YAAY,CAAC,WAAW,IAAI;YACvG,wBAAwB,cAAc,SAAS;QACnD;QAEA,MAAM,mBAAmB;YACrB,MAAM,KAAK,IAAI;YACf,OAAO,KAAK,KAAK;YACjB,UAAU,gBAAgB,CAAA,GAAA,qHAAA,CAAA,sBAAmB,AAAD,EAAE;YAC9C,oBAAoB,yBAAyB,CAAC,iFAAiF,CAAC;YAChI,YAAY,IAAI,OAAO,WAAW;QACtC;QAEA,MAAM,EAAE,MAAM,WAAW,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAC3D,IAAI,CAAC,uBACL,MAAM,CAAC,kBACP,EAAE,CAAC,MAAM,GACT,MAAM,GACN,MAAM;QAEX,IAAI,aAAa;YACb,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAA6B,aAAa,YAAY,OAAO;YAAC;QACzG,OAAO,IAAI,aAAa;YACpB,sBAAsB;YACtB,yBAAyB,YAAY,QAAQ;YAC7C,wBAAwB,YAAY,kBAAkB;YACtD,MAAM;gBAAE,OAAO;gBAAoB,aAAa;YAAqD;QACzG;QACA,gBAAgB;IAClB;IAEA,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,oNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,6LAAC;oBAAE,WAAU;8BAAe;;;;;;;;;;;;IAGlC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAExC,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAKvC,6LAAC,mIAAA,CAAA,OAAI;;kCACH,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAEnB,6LAAC,mIAAA,CAAA,OAAI;wBAAE,GAAG,IAAI;kCACZ,cAAA,6LAAC;4BAAK,UAAU,KAAK,YAAY,CAAC;;8CAChC,6LAAC,mIAAA,CAAA,cAAW;oCAAC,WAAU;;sDACrB,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gEAAC,aAAY;gEAA0B,GAAG,KAAK;;;;;;;;;;;sEAEvD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAIlB,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gEACP,aAAY;gEACZ,WAAU;gEACV,OAAO,MAAM,KAAK,IAAI;gEACtB,UAAU,MAAM,QAAQ;;;;;;;;;;;sEAG5B,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKlB,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gEAAC,MAAK;gEAAO,QAAO;gEAAU,UAAU;gEAA4B,WAAU;;;;;;;;;;;wDAErF,uCACC,6LAAC;4DAAI,WAAU;sEACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gEAAC,KAAK;gEAAuB,KAAI;gEAA0B,OAAO;gEAAI,QAAQ;gEAAI,WAAU;gEAAa,gBAAa;;;;;;;;;;;sEAGhI,6LAAC,mIAAA,CAAA,kBAAe;sEAAC;;;;;;sEACjB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;sDAKlB,6LAAC,mIAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;sEACP,6LAAC,mIAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,6LAAC,mIAAA,CAAA,cAAW;sEACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;gEAAC,MAAK;gEAAO,QAAO;gEAAU,UAAU;gEAA2B,WAAU;;;;;;;;;;;wDAEpF,sCACC,6LAAC;4DAAI,WAAU;sEACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gEAAC,KAAK;gEAAsB,KAAI;gEAA2B,OAAO;gEAAK,QAAQ;gEAAK,WAAU;gEAA4B,gBAAa;;;;;;;;;;;sEAGjJ,6LAAC,mIAAA,CAAA,kBAAe;sEAAC;;;;;;sEACjB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;8CAKpB,6LAAC,mIAAA,CAAA,aAAU;8CACT,cAAA,6LAAC,qIAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,UAAU,gBAAgB;kDAC7C,6BAAe;;8DAAE,6LAAC,oNAAA,CAAA,UAAO;oDAAC,WAAU;;;;;;gDAA6B;;2DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAM3F,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACf,6LAAC,mIAAA,CAAA,aAAU;kCACP,cAAA,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEf,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACnB,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAc;oCAAE,mBAAmB,IAAI;;;;;;;0CAClD,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAe;oCAAE,mBAAmB,KAAK,IAAI;;;;;;;0CACxD,6LAAC;;kDACG,6LAAC;kDAAO;;;;;;oCACP,mBAAmB,OAAO,iBACvB,6LAAC,gIAAA,CAAA,UAAK;wCAAC,KAAK,mBAAmB,OAAO;wCAAE,KAAI;wCAA0B,OAAO;wCAAI,QAAQ;wCAAI,WAAU;wCAA6B,gBAAa;;;;;6DACjJ,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;;;;;;;0CAE/C,6LAAC;;kDACE,6LAAC;kDAAO;;;;;;oCACP,mBAAmB,gBAAgB,iBAChC,6LAAC,gIAAA,CAAA,UAAK;wCAAC,KAAK,mBAAmB,gBAAgB;wCAAE,KAAI;wCAA2B,OAAO;wCAAK,QAAQ;wCAAK,WAAU;wCAA4C,gBAAa;;;;;6DAC5K,6LAAC;wCAAK,WAAU;kDAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5D;GArRwB;;QAIJ,+HAAA,CAAA,WAAQ;QAKb,iKAAA,CAAA,UAAO;;;KATE","debugId":null}}]
}