{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/common/TournamentLogo.tsx"],"sourcesContent":["\nimport React from 'react';\nimport Image from 'next/image';\n\ninterface TournamentLogoProps {\n  appName?: string;\n  tournamentName?: string;\n  size?: 'small' | 'medium' | 'large';\n  logoUrl?: string | null; // Accept a logo URL\n}\n\n// A simple SVG logo placeholder\nconst DefaultLogoIcon: React.FC<{ size?: 'small' | 'medium' | 'large' }> = ({ size = 'medium' }) => {\n  const iconSize = size === 'large' ? 40 : 32;\n  return (\n    <svg width={iconSize} height={iconSize} viewBox=\"0 0 100 100\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-primary mr-2\">\n      <path d=\"M50 0L61.8 23.5L88.2 23.5L68.2 38.2L76.4 61.8L50 47.1L23.6 61.8L31.8 38.2L11.8 23.5L38.2 23.5L50 0Z\" />\n      <path d=\"M50 25C41.7157 25 35 31.7157 35 40C35 48.2843 41.7157 55 50 55C58.2843 55 65 48.2843 65 40C65 31.7157 58.2843 25 50 25ZM50 50C44.4772 50 40 45.5228 40 40C40 34.4772 44.4772 30 50 30C55.5228 30 60 34.4772 60 40C60 45.5228 55.5228 50 50 50Z\" />\n      <circle cx=\"50\" cy=\"75\" r=\"15\" />\n    </svg>\n  );\n};\n\n\nconst TournamentLogo: React.FC<TournamentLogoProps> = ({ appName = \"Trendy's U13/U16\", tournamentName, size = 'medium', logoUrl }) => {\n  let textSize = 'text-xl';\n  let imageSize = 32;\n  if (size === 'small') {\n    textSize = 'text-lg';\n    imageSize = 28;\n  }\n  if (size === 'large') {\n    textSize = 'text-2xl';\n    imageSize = 40;\n  }\n\n\n  return (\n    <div className=\"flex items-center\">\n      {logoUrl ? (\n        <Image\n          src={logoUrl}\n          alt={tournamentName || appName || 'Tournament Logo'}\n          width={imageSize}\n          height={imageSize}\n          className=\"mr-2 rounded-sm object-contain\"\n          data-ai-hint=\"logo tournament\"\n        />\n      ) : (\n        <DefaultLogoIcon size={size} />\n      )}\n      <div className=\"flex flex-col\">\n        <span className={`font-headline font-semibold ${textSize} leading-tight`}>\n          {appName || tournamentName} {/* Display tournamentName if appName is empty */}\n        </span>\n        {appName && tournamentName && ( // Only show tournamentName as subtitle if appName is also present\n          <span className={`font-headline text-xs ${size === 'small' ? 'hidden sm:inline' : ''} opacity-80 leading-tight`}>\n            {tournamentName}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TournamentLogo;\n"],"names":[],"mappings":";;;;AAEA;;;AASA,gCAAgC;AAChC,MAAM,kBAAqE,CAAC,EAAE,OAAO,QAAQ,EAAE;IAC7F,MAAM,WAAW,SAAS,UAAU,KAAK;IACzC,qBACE,8OAAC;QAAI,OAAO;QAAU,QAAQ;QAAU,SAAQ;QAAc,MAAK;QAAe,OAAM;QAA6B,WAAU;;0BAC7H,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAO,IAAG;gBAAK,IAAG;gBAAK,GAAE;;;;;;;;;;;;AAGhC;AAGA,MAAM,iBAAgD,CAAC,EAAE,UAAU,kBAAkB,EAAE,cAAc,EAAE,OAAO,QAAQ,EAAE,OAAO,EAAE;IAC/H,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,SAAS,SAAS;QACpB,WAAW;QACX,YAAY;IACd;IACA,IAAI,SAAS,SAAS;QACpB,WAAW;QACX,YAAY;IACd;IAGA,qBACE,8OAAC;QAAI,WAAU;;YACZ,wBACC,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAK,kBAAkB,WAAW;gBAClC,OAAO;gBACP,QAAQ;gBACR,WAAU;gBACV,gBAAa;;;;;qCAGf,8OAAC;gBAAgB,MAAM;;;;;;0BAEzB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAW,CAAC,4BAA4B,EAAE,SAAS,cAAc,CAAC;;4BACrE,WAAW;4BAAe;;;;;;;oBAE5B,WAAW,gCACV,8OAAC;wBAAK,WAAW,CAAC,sBAAsB,EAAE,SAAS,UAAU,qBAAqB,GAAG,yBAAyB,CAAC;kCAC5G;;;;;;;;;;;;;;;;;;AAMb;uCAEe","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/user/tournament/TournamentHeader.tsx"],"sourcesContent":["\nimport React from 'react';\nimport Image from 'next/image';\nimport type { TournamentInfo } from '@/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport TournamentLogo from '@/components/common/TournamentLogo';\n\ninterface TournamentHeaderProps {\n  info: TournamentInfo;\n}\n\nconst TournamentHeader: React.FC<TournamentHeaderProps> = ({ info }) => {\n  // Determine if the logoUrl is a placeholder or a real URL for the banner\n  // The TournamentLogo component within the banner area will use info.logoUrl IF it's small,\n  // otherwise, info.logoUrl is used for the large background.\n  // This assumes info.logoUrl from database might be intended as a banner.\n  // If a separate smaller logo is always desired on the banner, info should perhaps have info.bannerUrl and info.logoUrl_small.\n  // For now, we use info.logoUrl for the main banner image.\n  // The TournamentLogo component will display the name.\n\n  const bannerImageUrl = info.logoUrl || \"https://placehold.co/1200x400/50C878/FFFFFF.png?text=Stadium+View&font=poppins\";\n\n  return (\n    <Card className=\"mb-8 shadow-lg overflow-hidden\">\n      <div className=\"relative h-48 md:h-64 w-full\">\n        <Image\n          src={bannerImageUrl}\n          alt={`${info.name} banner`}\n          fill={true}\n          style={{objectFit:\"cover\"}}\n          priority // Prioritize loading the main banner image\n          data-ai-hint=\"stadium crowd tournament\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent\"></div>\n        <div className=\"absolute bottom-4 left-4 md:bottom-6 md:left-6\">\n          <div className=\"inline-block bg-background/80 backdrop-blur-sm p-3 rounded-lg shadow-md\">\n             {/* Here we use TournamentLogo just for text, as the background IS the logo/banner */}\n             {/* If info.logoUrl was intended to be a small icon, we'd pass it to TournamentLogo's logoUrl prop here */}\n             <TournamentLogo appName=\"\" tournamentName={info.name} size=\"large\" logoUrl={null}/>\n          </div>\n        </div>\n      </div>\n      <CardContent className=\"p-6\">\n        <CardTitle className=\"text-2xl font-headline mb-3\">About the Tournament</CardTitle>\n        <CardDescription className=\"text-base leading-relaxed text-foreground/80\">\n          {info.about || \"Information about this tournament will be available soon.\"}\n        </CardDescription>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TournamentHeader;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAMA,MAAM,mBAAoD,CAAC,EAAE,IAAI,EAAE;IACjE,yEAAyE;IACzE,2FAA2F;IAC3F,4DAA4D;IAC5D,yEAAyE;IACzE,8HAA8H;IAC9H,0DAA0D;IAC1D,sDAAsD;IAEtD,MAAM,iBAAiB,KAAK,OAAO,IAAI;IAEvC,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,GAAG,KAAK,IAAI,CAAC,OAAO,CAAC;wBAC1B,MAAM;wBACN,OAAO;4BAAC,WAAU;wBAAO;wBACzB,QAAQ;wBACR,gBAAa;;;;;;kCAEf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCAGZ,cAAA,8OAAC,8IAAA,CAAA,UAAc;gCAAC,SAAQ;gCAAG,gBAAgB,KAAK,IAAI;gCAAE,MAAK;gCAAQ,SAAS;;;;;;;;;;;;;;;;;;;;;;0BAInF,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAA8B;;;;;;kCACnD,8OAAC,gIAAA,CAAA,kBAAe;wBAAC,WAAU;kCACxB,KAAK,KAAK,IAAI;;;;;;;;;;;;;;;;;;AAKzB;uCAEe","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/user/tournament/GroupTable.tsx"],"sourcesContent":["import React from 'react';\nimport Image from 'next/image';\nimport type { Group } from '@/types';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface GroupTableProps {\n  group: Group;\n}\n\nconst GroupTable: React.FC<GroupTableProps> = ({ group }) => {\n  return (\n    <Card className=\"mb-6 shadow-md\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-xl\">{group.name}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-[50px]\">#</TableHead>\n              <TableHead>Team</TableHead>\n              <TableHead className=\"text-center\">MP</TableHead>\n              <TableHead className=\"text-center\">W</TableHead>\n              <TableHead className=\"text-center\">D</TableHead>\n              <TableHead className=\"text-center\">L</TableHead>\n              <TableHead className=\"text-center\">GF</TableHead>\n              <TableHead className=\"text-center\">GA</TableHead>\n              <TableHead className=\"text-center\">GD</TableHead>\n              <TableHead className=\"text-center font-semibold\">Pts</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {group.teams\n              .sort((a, b) => b.points - a.points || b.goalDifference - a.goalDifference || b.goalsFor - a.goalsFor)\n              .map((gt, index) => (\n              <TableRow key={gt.team.id} className={gt.isLive ? 'bg-accent/10' : ''}>\n                <TableCell className=\"font-medium\">{index + 1}</TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-3\">\n                    <Image \n                      src={gt.team.logoUrl} \n                      alt={gt.team.name} \n                      width={24} \n                      height={24} \n                      className=\"rounded-full\" \n                      data-ai-hint=\"team logo\"\n                    />\n                    <span className=\"font-medium truncate max-w-[100px] sm:max-w-[150px]\">{gt.team.name}</span>\n                    {gt.isLive && <Badge variant=\"destructive\" className=\"ml-2 animate-pulse\">LIVE</Badge>}\n                    {gt.isLive && gt.liveScore && <span className=\"text-xs text-muted-foreground ml-1\">({gt.liveScore})</span>}\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-center\">{gt.played}</TableCell>\n                <TableCell className=\"text-center\">{gt.won}</TableCell>\n                <TableCell className=\"text-center\">{gt.drawn}</TableCell>\n                <TableCell className=\"text-center\">{gt.lost}</TableCell>\n                <TableCell className=\"text-center\">{gt.goalsFor}</TableCell>\n                <TableCell className=\"text-center\">{gt.goalsAgainst}</TableCell>\n                <TableCell className=\"text-center\">{gt.goalDifference}</TableCell>\n                <TableCell className=\"text-center font-semibold text-primary\">{gt.points}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default GroupTable;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["\nimport { createClient, type SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase'; // We will create this file later for types\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Helper type for the mock client's error structure\ntype MockError = { message: string; details: string; hint: string; code: string } | null;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `Supabase URL or anon key is missing. \n      Please check your .env.local file and ensure NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set.\n      Falling back to a mock client for development purposes. NO DATA WILL BE SAVED.`\n    );\n\n    const mockSupabase = {\n      from: (tableName: string) => {\n        let currentError: MockError = { message: `Mock Supabase: Query on ${tableName} - no connection`, details: '', hint: '', code: '' };\n        let currentData: any = []; // Default to array for multi-row select\n        let isSingleQuery = false;\n\n        const builder = {\n          select: function(columns: string = '*') {\n            // console.warn(`Mock Supabase: .select(\"${columns}\") called on ${tableName}`);\n            currentData = isSingleQuery ? null : [];\n            currentError = { message: `Mock Supabase: select on ${tableName} - no connection`, details: '', hint: '', code: '' };\n            if (isSingleQuery && currentData === null) {\n              currentError.message = `Mock Supabase: single select on ${tableName} - no connection`;\n            }\n            return this;\n          },\n          insert: function(rowData: any) {\n            // console.warn(`Mock Supabase: .insert() called on ${tableName}`);\n            // For insert().select().single(), Supabase returns the inserted object (or first if array)\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null; // Simulate successful insert for mock\n            isSingleQuery = true; // insert().select().single() implies single result\n            return this;\n          },\n          update: function(rowData: any) {\n            // console.warn(`Mock Supabase: .update() called on ${tableName}`);\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null;\n            isSingleQuery = true;\n            return this;\n          },\n          delete: function() {\n            // console.warn(`Mock Supabase: .delete() called on ${tableName}`);\n            currentData = []; // Supabase delete often returns the deleted items\n            currentError = null;\n            isSingleQuery = false; // delete can affect multiple, but select might follow\n            return this;\n          },\n          order: function(column: string, options?: { ascending?: boolean; nullsFirst?: boolean }) {\n            console.warn(`Mock Supabase: .order() called on ${tableName} for ${column}. Data will not actually be ordered.`);\n            return this;\n          },\n          eq: function(column: string, value: any) {\n            console.warn(`Mock Supabase: .eq() called on ${tableName} for ${column}=${value}. Data will not actually be filtered.`);\n            // if (isSingleQuery) { // If .single() was called before .eq(), this might adjust currentData based on a mock scenario\n            //    currentData = null; // Reset if filter means no match\n            // }\n            return this;\n          },\n          single: function() {\n            // console.warn(`Mock Supabase: .single() called on ${tableName}`);\n            isSingleQuery = true;\n            currentData = null; \n            currentError = { message: `Mock Supabase: single select on ${tableName} - no record found or connection error`, details: '', hint: '', code: '' };\n            return this;\n          },\n          // Make the builder thenable (awaitable)\n          then: function(onFulfilled: (value: { data: any; error: MockError; }) => void, onRejected?: (reason: any) => void) {\n            let resultData = isSingleQuery ? currentData : currentData;\n            if (isSingleQuery && resultData === undefined) resultData = null;\n            if (!isSingleQuery && resultData === undefined) resultData = [];\n            \n            // if single and error, data should be null (Supabase behavior)\n            if(isSingleQuery && currentError && resultData !== null) {\n                 // resultData = null; // Be careful with this, as sometimes Supabase returns partial data + error\n            }\n\n            const result = { data: resultData, error: currentError };\n            // console.log(`Mock promise for ${tableName} resolving with:`, JSON.stringify(result));\n            return Promise.resolve(result).then(onFulfilled, onRejected);\n          },\n          catch: function(onRejected: (reason: any) => void) {\n            // Ensure then is defined if catch is called directly on the builder.\n            // This is a simplified catch. A full promise implementation would be more complex.\n            return this.then(undefined, onRejected);\n          }\n        };\n        return builder;\n      },\n      storage: {\n        from: (bucket: string) => ({\n            upload: async (path: string, file: File | Blob, options?: any) => {\n                 console.warn(`Mock Supabase Storage: .upload() called for bucket ${bucket}. File will not be uploaded.`);\n                 return ({ data: { path: `mock/${bucket}/${path}` }, error: null });\n            },\n            getPublicUrl: (path: string) => {\n                console.warn(`Mock Supabase Storage: .getPublicUrl() called for path ${path} in bucket ${bucket}.`);\n                return ({ data: { publicUrl: `https://placehold.co/128x128.png?text=MOCK` } });\n            },\n        }),\n      }\n    };\n    globalThis.supabaseClientInstance = mockSupabase as any as SupabaseClient<Database>;\n  } else {\n    throw new Error(\"Supabase URL and anon key are required. Application cannot start in production without them.\");\n  }\n} else {\n   globalThis.supabaseClientInstance = createClient<Database>(supabaseUrl, supabaseAnonKey);\n}\n\nexport const supabase = globalThis.supabaseClientInstance;\n"],"names":[],"mappings":";;;AACA;;AAGA,MAAM;AACN,MAAM;AAKN,uCAAsC;;AA0GtC,OAAO;IACJ,WAAW,sBAAsB,GAAG,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC3E;AAEO,MAAM,WAAW,WAAW,sBAAsB","debugId":null}},
    {"offset": {"line": 911, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\nimport type { Team, Match, Player, MatchEvent, SupabaseMatch } from '@/types';\nimport { supabase } from './supabaseClient';\n\nexport const placeholderTeamLogo = (name: string): string => {\n  const initials = name.length >= 2 ? name.substring(0, 2).toUpperCase() : name.substring(0,1).toUpperCase() + (name.length > 1 ? name.substring(1,1) : '');\n  return `https://placehold.co/128x128/FFFFFF/50C878.png?text=${initials}&font=poppins`;\n}\n\n// Helper function to map Supabase team data (potentially with players) to local Team type\nconst mapSupabaseTeamToLocalUser = (supabaseTeam: any, players: Player[] = []): Team => {\n  return {\n    id: supabaseTeam.id,\n    name: supabaseTeam.name,\n    coachName: supabaseTeam.coach_name || 'N/A',\n    logoUrl: supabaseTeam.logo_url || placeholderTeamLogo(supabaseTeam.name),\n    players: players.map(p => ({\n        id: p.id,\n        name: p.name,\n        shirt_number: p.shirt_number, \n        team_id: p.team_id,\n        created_at: p.created_at\n    })),\n  };\n};\n\nexport const getMatchById = async (id: string): Promise<Match | null | undefined> => {\n  const { data: matchData, error } = await supabase\n    .from('matches')\n    .select(`\n      id,\n      date_time,\n      venue,\n      status,\n      score_a,\n      score_b,\n      events,\n      lineup_a_player_ids,\n      lineup_b_player_ids,\n      duration,\n      player_of_the_match_id,\n      teamA:team_a_id (id, name, logo_url, coach_name, players (id, name, shirt_number, team_id, created_at)),\n      teamB:team_b_id (id, name, logo_url, coach_name, players (id, name, shirt_number, team_id, created_at)),\n      playerOfTheMatch:player_of_the_match_id (id, name, shirt_number, team_id)\n    `)\n    .eq('id', id)\n    .single();\n\n  if (error) {\n    console.error(`Error fetching match by ID (${id}):`, error.message);\n    if (error.code === 'PGRST116') return null; \n    return undefined; \n  }\n  if (!matchData) return null;\n\n  const teamARaw = matchData.teamA as any;\n  const teamBRaw = matchData.teamB as any;\n\n  const teamA: Team = teamARaw ? \n    mapSupabaseTeamToLocalUser(teamARaw, (teamARaw.players as Player[] || [])) : \n    { id: 'unknownA', name: 'Unknown Team A', logoUrl: placeholderTeamLogo('?'), coachName: 'N/A', players: [] };\n\n  const teamB: Team = teamBRaw ? \n    mapSupabaseTeamToLocalUser(teamBRaw, (teamBRaw.players as Player[] || [])) : \n    { id: 'unknownB', name: 'Unknown Team B', logoUrl: placeholderTeamLogo('?'), coachName: 'N/A', players: [] };\n\n  let lineupA: Player[] = [];\n  if (matchData.lineup_a_player_ids && matchData.lineup_a_player_ids.length > 0 && teamA.players.length > 0) {\n    const lineupIdsA = new Set(matchData.lineup_a_player_ids);\n    lineupA = teamA.players.filter(p => lineupIdsA.has(p.id));\n  } else if (teamA.players.length > 0) {\n    // Fallback: use first 11 players from roster if specific lineup IDs aren't set\n    lineupA = teamA.players.slice(0, 11);\n  }\n  \n  let lineupB: Player[] = [];\n  if (matchData.lineup_b_player_ids && matchData.lineup_b_player_ids.length > 0 && teamB.players.length > 0) {\n     const lineupIdsB = new Set(matchData.lineup_b_player_ids);\n     lineupB = teamB.players.filter(p => lineupIdsB.has(p.id));\n  } else if (teamB.players.length > 0) {\n    // Fallback: use first 11 players from roster\n    lineupB = teamB.players.slice(0, 11);\n  }\n\n  const playerOfTheMatch = matchData.playerOfTheMatch ? {\n    id: (matchData.playerOfTheMatch as any).id,\n    name: (matchData.playerOfTheMatch as any).name,\n    shirt_number: (matchData.playerOfTheMatch as any).shirt_number,\n    team_id: (matchData.playerOfTheMatch as any).team_id,\n  } : undefined;\n\n\n  return {\n    id: matchData.id,\n    teamA,\n    teamB,\n    dateTime: new Date(matchData.date_time),\n    venue: matchData.venue || 'N/A',\n    status: matchData.status as 'scheduled' | 'live' | 'completed' | 'halftime',\n    scoreA: matchData.score_a ?? undefined,\n    scoreB: matchData.score_b ?? undefined,\n    events: (matchData.events as MatchEvent[] | null) || [],\n    lineupA,\n    lineupB,\n    duration: matchData.duration ?? undefined,\n    playerOfTheMatchId: matchData.player_of_the_match_id ?? undefined,\n    playerOfTheMatch: playerOfTheMatch,\n  };\n};\n\n\nexport const mockTournamentInfo: TournamentInfo = {\n  id: 1, \n  name: \"Tournament Tracker (Fallback)\",\n  logoUrl: placeholderTeamLogo('TT'),\n  about: \"Fallback tournament description. Configure in admin panel.\",\n  knockoutImageUrl: `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`,\n};\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28user%29/tournament/page.tsx"],"sourcesContent":["\nimport React from 'react';\nimport Image from 'next/image';\nimport TournamentHeader from '@/components/user/tournament/TournamentHeader';\nimport GroupTable from '@/components/user/tournament/GroupTable';\nimport { placeholderTeamLogo, mockTournamentInfo } from '@/lib/data';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport type { Metadata } from 'next';\nimport { supabase } from '@/lib/supabaseClient';\nimport type { TournamentInfo, Group, Team, GroupTeam, Player } from '@/types';\nimport type { Tables } from '@/types/supabase';\n\ntype TournamentSettingsRow = Tables<'tournament_settings'>;\n\n// Helper to map from DB row (snake_case) to TournamentInfo (camelCase)\n// Consistent with the one in admin/settings for clarity, could be moved to lib/data if preferred\nconst mapDbRowToTournamentInfoUser = (dbRow: TournamentSettingsRow): TournamentInfo => {\n  return {\n    id: dbRow.id,\n    name: dbRow.name,\n    about: dbRow.about,\n    logoUrl: dbRow.logo_url, // Maps snake_case to camelCase\n    knockoutImageUrl: dbRow.knockout_image_url, // Maps snake_case to camelCase\n    updated_at: dbRow.updated_at,\n  };\n};\n\n\nconst mapDbTeamToGroupTeam = (dbTeamEntry: any): GroupTeam => {\n  const team: Team = {\n    id: dbTeamEntry.team.id,\n    name: dbTeamEntry.team.name,\n    logoUrl: dbTeamEntry.team.logo_url || placeholderTeamLogo(dbTeamEntry.team.name),\n    coachName: dbTeamEntry.team.coach_name || 'N/A',\n    players: (dbTeamEntry.team.players as Player[] || []),\n  };\n  return {\n    team: team,\n    played: dbTeamEntry.played,\n    won: dbTeamEntry.won,\n    drawn: dbTeamEntry.drawn,\n    lost: dbTeamEntry.lost,\n    goalsFor: dbTeamEntry.goals_for,\n    goalsAgainst: dbTeamEntry.goals_against,\n    goalDifference: dbTeamEntry.goals_for - dbTeamEntry.goals_against,\n    points: dbTeamEntry.points,\n    isLive: false,\n    liveScore: undefined,\n  };\n};\n\nasync function getTournamentPageData() {\n  let tournamentInfo: TournamentInfo | null = null;\n  let groups: Group[] = [];\n\n  const { data: settingsData, error: settingsError } = await supabase\n    .from('tournament_settings')\n    .select('*')\n    .eq('id', 1)\n    .single();\n\n  if (settingsError || !settingsData) {\n    console.error(\"Error fetching tournament settings for user page:\", settingsError?.message);\n    // Use mockTournamentInfo as fallback, ensuring it matches the TournamentInfo structure\n    tournamentInfo = {\n        id: mockTournamentInfo.id || 1,\n        name: mockTournamentInfo.name,\n        about: mockTournamentInfo.about,\n        logoUrl: mockTournamentInfo.logoUrl, // Already camelCase in mock\n        knockoutImageUrl: mockTournamentInfo.knockoutImageUrl, // Already camelCase in mock\n    };\n  } else {\n    // Map the fetched snake_case data to camelCase TournamentInfo\n    tournamentInfo = mapDbRowToTournamentInfoUser(settingsData as TournamentSettingsRow);\n  }\n\n  const { data: dbGroups, error: groupsError } = await supabase\n    .from('groups')\n    .select('id, name');\n\n  if (groupsError) {\n    console.error(\"Error fetching groups:\", groupsError.message);\n  } else if (dbGroups) {\n    for (const dbGroup of dbGroups) {\n      const { data: groupTeamsData, error: groupTeamsError } = await supabase\n        .from('group_teams')\n        .select(`\n          played,\n          won,\n          drawn,\n          lost,\n          goals_for,\n          goals_against,\n          points,\n          team:teams (id, name, logo_url, coach_name)\n        `)\n        .eq('group_id', dbGroup.id)\n        .order('points', { ascending: false })\n        .order('goals_for', { ascending: false });\n\n      if (groupTeamsError) {\n        console.error(`Error fetching teams for group ${dbGroup.name}:`, groupTeamsError.message);\n        groups.push({ id: dbGroup.id, name: dbGroup.name, teams: [] });\n      } else {\n        const teamsForGroup: GroupTeam[] = groupTeamsData ? groupTeamsData.map(mapDbTeamToGroupTeam) : [];\n        groups.push({ id: dbGroup.id, name: dbGroup.name, teams: teamsForGroup });\n      }\n    }\n  }\n\n  if (groups.length === 0) {\n    console.warn(\"No groups fetched from Supabase, falling back to empty or consider mock groups.\");\n  }\n\n\n  return { tournamentInfo, groups };\n}\n\nexport async function generateMetadata(): Promise<Metadata> {\n  let tournamentName = \"Tournament Overview\";\n  try {\n    const { data: settingsData } = await supabase\n      .from('tournament_settings')\n      .select('name')\n      .eq('id', 1)\n      .single();\n    if (settingsData?.name) tournamentName = settingsData.name;\n  } catch (e) { /* ignore */ }\n\n  return {\n    title: `${tournamentName} | Trendy's Tournament Tracker`,\n    description: `View tournament details, group standings, and progression for ${tournamentName}.`,\n  };\n}\n\n\nexport default async function TournamentPage() {\n  const { tournamentInfo, groups } = await getTournamentPageData();\n\n  if (!tournamentInfo) {\n    return <div className=\"container mx-auto py-8 px-4 text-center\">Error loading tournament information.</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto py-8 px-4\">\n      <TournamentHeader info={tournamentInfo} />\n\n      <h2 className=\"text-2xl font-headline font-bold mb-6 text-center md:text-left\">Group Standings</h2>\n      {groups.length > 0 ? (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          {groups.map((group) => (\n            <GroupTable key={group.id} group={group} />\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-muted-foreground mb-6 text-center md:text-left py-8\">\n          Group standings are not yet available. Please check back later.\n        </p>\n      )}\n\n\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-xl\">Knockout Stage Progression</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {tournamentInfo.knockoutImageUrl ? (\n            <div className=\"relative w-full aspect-[16/10] md:aspect-[16/9] rounded-lg overflow-hidden border-2 border-muted bg-muted/20\">\n              <Image\n                src={tournamentInfo.knockoutImageUrl}\n                alt=\"Tournament knockout stage progression diagram\"\n                fill={true}\n                style={{objectFit: \"contain\"}}\n                data-ai-hint=\"diagram chart\"\n              />\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-64 border-2 border-dashed border-muted rounded-lg bg-muted/20\">\n              <p className=\"text-muted-foreground\">Tournament progression diagram coming soon!</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}