{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/common/TournamentLogo.tsx"],"sourcesContent":["import React from 'react';\n\ninterface TournamentLogoProps {\n  appName?: string;\n  tournamentName?: string;\n  size?: 'small' | 'medium' | 'large';\n}\n\n// A simple SVG logo placeholder\nconst DefaultLogoIcon = () => (\n  <svg width=\"32\" height=\"32\" viewBox=\"0 0 100 100\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" className=\"text-primary mr-2\">\n    <path d=\"M50 0L61.8 23.5L88.2 23.5L68.2 38.2L76.4 61.8L50 47.1L23.6 61.8L31.8 38.2L11.8 23.5L38.2 23.5L50 0Z\" />\n    <path d=\"M50 25C41.7157 25 35 31.7157 35 40C35 48.2843 41.7157 55 50 55C58.2843 55 65 48.2843 65 40C65 31.7157 58.2843 25 50 25ZM50 50C44.4772 50 40 45.5228 40 40C40 34.4772 44.4772 30 50 30C55.5228 30 60 34.4772 60 40C60 45.5228 55.5228 50 50 50Z\" />\n    <circle cx=\"50\" cy=\"75\" r=\"15\" />\n  </svg>\n);\n\n\nconst TournamentLogo: React.FC<TournamentLogoProps> = ({ appName = \"Trendy's U13/U16\", tournamentName, size = 'medium' }) => {\n  let textSize = 'text-xl';\n  if (size === 'small') textSize = 'text-lg';\n  if (size === 'large') textSize = 'text-2xl';\n\n  return (\n    <div className=\"flex items-center\">\n      <DefaultLogoIcon />\n      <div className=\"flex flex-col\">\n        <span className={`font-headline font-semibold ${textSize} leading-tight`}>\n          {appName}\n        </span>\n        {tournamentName && (\n          <span className={`font-headline text-xs ${size === 'small' ? 'hidden' : ''} opacity-80 leading-tight`}>\n            {tournamentName}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TournamentLogo;\n"],"names":[],"mappings":";;;;;AAQA,gCAAgC;AAChC,MAAM,kBAAkB,kBACtB,8OAAC;QAAI,OAAM;QAAK,QAAO;QAAK,SAAQ;QAAc,MAAK;QAAe,OAAM;QAA6B,WAAU;;0BACjH,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAK,GAAE;;;;;;0BACR,8OAAC;gBAAO,IAAG;gBAAK,IAAG;gBAAK,GAAE;;;;;;;;;;;;AAK9B,MAAM,iBAAgD,CAAC,EAAE,UAAU,kBAAkB,EAAE,cAAc,EAAE,OAAO,QAAQ,EAAE;IACtH,IAAI,WAAW;IACf,IAAI,SAAS,SAAS,WAAW;IACjC,IAAI,SAAS,SAAS,WAAW;IAEjC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;;;;0BACD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAW,CAAC,4BAA4B,EAAE,SAAS,cAAc,CAAC;kCACrE;;;;;;oBAEF,gCACC,8OAAC;wBAAK,WAAW,CAAC,sBAAsB,EAAE,SAAS,UAAU,WAAW,GAAG,yBAAyB,CAAC;kCAClG;;;;;;;;;;;;;;;;;;AAMb;uCAEe","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/user/tournament/TournamentHeader.tsx"],"sourcesContent":["\nimport React from 'react';\nimport Image from 'next/image';\nimport type { TournamentInfo } from '@/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport TournamentLogo from '@/components/common/TournamentLogo'; \n\ninterface TournamentHeaderProps {\n  info: TournamentInfo;\n}\n\nconst TournamentHeader: React.FC<TournamentHeaderProps> = ({ info }) => {\n  return (\n    <Card className=\"mb-8 shadow-lg overflow-hidden\">\n      <div className=\"relative h-48 md:h-64 w-full\">\n        <Image \n          src={info.logoUrl || \"https://placehold.co/1200x400/50C878/FFFFFF.png?text=Stadium+View&font=poppins\"} \n          alt=\"Tournament banner\" \n          fill={true}\n          style={{objectFit:\"cover\"}}\n          data-ai-hint=\"stadium crowd\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent\"></div>\n        <div className=\"absolute bottom-4 left-4 md:bottom-6 md:left-6\">\n          <div className=\"inline-block bg-background/80 backdrop-blur-sm p-3 rounded-lg\">\n             <TournamentLogo appName=\"\" tournamentName={info.name} size=\"large\" />\n          </div>\n        </div>\n      </div>\n      <CardContent className=\"p-6\">\n        <CardTitle className=\"text-2xl font-headline mb-3\">About the Tournament</CardTitle>\n        <CardDescription className=\"text-base leading-relaxed text-foreground/80\">\n          {info.about || \"Information about this tournament will be available soon.\"}\n        </CardDescription>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TournamentHeader;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;;;;;AAMA,MAAM,mBAAoD,CAAC,EAAE,IAAI,EAAE;IACjE,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK,KAAK,OAAO,IAAI;wBACrB,KAAI;wBACJ,MAAM;wBACN,OAAO;4BAAC,WAAU;wBAAO;wBACzB,gBAAa;;;;;;kCAEf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACZ,cAAA,8OAAC,8IAAA,CAAA,UAAc;gCAAC,SAAQ;gCAAG,gBAAgB,KAAK,IAAI;gCAAE,MAAK;;;;;;;;;;;;;;;;;;;;;;0BAIlE,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAA8B;;;;;;kCACnD,8OAAC,gIAAA,CAAA,kBAAe;wBAAC,WAAU;kCACxB,KAAK,KAAK,IAAI;;;;;;;;;;;;;;;;;;AAKzB;uCAEe","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/user/tournament/GroupTable.tsx"],"sourcesContent":["import React from 'react';\nimport Image from 'next/image';\nimport type { Group } from '@/types';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface GroupTableProps {\n  group: Group;\n}\n\nconst GroupTable: React.FC<GroupTableProps> = ({ group }) => {\n  return (\n    <Card className=\"mb-6 shadow-md\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-xl\">{group.name}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-[50px]\">#</TableHead>\n              <TableHead>Team</TableHead>\n              <TableHead className=\"text-center\">MP</TableHead>\n              <TableHead className=\"text-center\">W</TableHead>\n              <TableHead className=\"text-center\">D</TableHead>\n              <TableHead className=\"text-center\">L</TableHead>\n              <TableHead className=\"text-center\">GF</TableHead>\n              <TableHead className=\"text-center\">GA</TableHead>\n              <TableHead className=\"text-center\">GD</TableHead>\n              <TableHead className=\"text-center font-semibold\">Pts</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {group.teams\n              .sort((a, b) => b.points - a.points || b.goalDifference - a.goalDifference || b.goalsFor - a.goalsFor)\n              .map((gt, index) => (\n              <TableRow key={gt.team.id} className={gt.isLive ? 'bg-accent/10' : ''}>\n                <TableCell className=\"font-medium\">{index + 1}</TableCell>\n                <TableCell>\n                  <div className=\"flex items-center space-x-3\">\n                    <Image \n                      src={gt.team.logoUrl} \n                      alt={gt.team.name} \n                      width={24} \n                      height={24} \n                      className=\"rounded-full\" \n                      data-ai-hint=\"team logo\"\n                    />\n                    <span className=\"font-medium truncate max-w-[100px] sm:max-w-[150px]\">{gt.team.name}</span>\n                    {gt.isLive && <Badge variant=\"destructive\" className=\"ml-2 animate-pulse\">LIVE</Badge>}\n                    {gt.isLive && gt.liveScore && <span className=\"text-xs text-muted-foreground ml-1\">({gt.liveScore})</span>}\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-center\">{gt.played}</TableCell>\n                <TableCell className=\"text-center\">{gt.won}</TableCell>\n                <TableCell className=\"text-center\">{gt.drawn}</TableCell>\n                <TableCell className=\"text-center\">{gt.lost}</TableCell>\n                <TableCell className=\"text-center\">{gt.goalsFor}</TableCell>\n                <TableCell className=\"text-center\">{gt.goalsAgainst}</TableCell>\n                <TableCell className=\"text-center\">{gt.goalDifference}</TableCell>\n                <TableCell className=\"text-center font-semibold text-primary\">{gt.points}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default GroupTable;\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;;;;;;AAMA,MAAM,aAAwC,CAAC,EAAE,KAAK,EAAE;IACtD,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAyB,MAAM,IAAI;;;;;;;;;;;0BAE1D,8OAAC,gIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;;sCACJ,8OAAC,iIAAA,CAAA,cAAW;sCACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;kDACP,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAW;;;;;;kDAChC,8OAAC,iIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc;;;;;;kDACnC,8OAAC,iIAAA,CAAA,YAAS;wCAAC,WAAU;kDAA4B;;;;;;;;;;;;;;;;;sCAGrD,8OAAC,iIAAA,CAAA,YAAS;sCACP,MAAM,KAAK,CACT,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,MAAM,GAAG,EAAE,MAAM,IAAI,EAAE,cAAc,GAAG,EAAE,cAAc,IAAI,EAAE,QAAQ,GAAG,EAAE,QAAQ,EACpG,GAAG,CAAC,CAAC,IAAI,sBACV,8OAAC,iIAAA,CAAA,WAAQ;oCAAkB,WAAW,GAAG,MAAM,GAAG,iBAAiB;;sDACjE,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,QAAQ;;;;;;sDAC5C,8OAAC,iIAAA,CAAA,YAAS;sDACR,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,6HAAA,CAAA,UAAK;wDACJ,KAAK,GAAG,IAAI,CAAC,OAAO;wDACpB,KAAK,GAAG,IAAI,CAAC,IAAI;wDACjB,OAAO;wDACP,QAAQ;wDACR,WAAU;wDACV,gBAAa;;;;;;kEAEf,8OAAC;wDAAK,WAAU;kEAAuD,GAAG,IAAI,CAAC,IAAI;;;;;;oDAClF,GAAG,MAAM,kBAAI,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;wDAAc,WAAU;kEAAqB;;;;;;oDACzE,GAAG,MAAM,IAAI,GAAG,SAAS,kBAAI,8OAAC;wDAAK,WAAU;;4DAAqC;4DAAE,GAAG,SAAS;4DAAC;;;;;;;;;;;;;;;;;;sDAGtG,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,MAAM;;;;;;sDAC7C,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,GAAG;;;;;;sDAC1C,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,KAAK;;;;;;sDAC5C,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,IAAI;;;;;;sDAC3C,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,QAAQ;;;;;;sDAC/C,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,YAAY;;;;;;sDACnD,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAe,GAAG,cAAc;;;;;;sDACrD,8OAAC,iIAAA,CAAA,YAAS;4CAAC,WAAU;sDAA0C,GAAG,MAAM;;;;;;;mCAxB3D,GAAG,IAAI,CAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCvC;uCAEe","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\nimport type { Team, Match, Group, TournamentInfo, Player, GoalEvent, CardEvent } from '@/types';\n\nexport const placeholderTeamLogo = (name: string) => `https://placehold.co/128x128/FFFFFF/50C878.png?text=${name.substring(0,2).toUpperCase()}&font=poppins`;\n\nconst createPlayer = (id: string, name: string, shirtNumber: number, team_id: string): Player => ({ id, name, shirt_number: shirtNumber, team_id });\n\n// Mock teams for user-facing components - Admin panel fetches from Supabase.\nexport const exampleTeamsForUserDisplay: Team[] = [\n  {\n    id: 'user-team1',\n    name: 'Green Lions (User)',\n    logoUrl: placeholderTeamLogo('GL'),\n    coachName: 'Coach Arthur',\n    players: [\n      createPlayer('user-p1', 'Leo Green', 10, 'user-team1'),\n      createPlayer('user-p2', 'Sam Stripes', 7, 'user-team1'),\n    ],\n  },\n  {\n    id: 'user-team2',\n    name: 'Blue Eagles (User)',\n    logoUrl: placeholderTeamLogo('BE'),\n    coachName: 'Coach Bella',\n    players: [\n      createPlayer('user-p6', 'Eva Blue', 10, 'user-team2'),\n    ],\n  },\n   {\n    id: 'user-team3',\n    name: 'Red Dragons (User)',\n    logoUrl: placeholderTeamLogo('RD'),\n    coachName: 'Coach Drake',\n    players: [createPlayer('user-p11', 'Ruby Fire', 9, 'user-team3')],\n  },\n  {\n    id: 'user-team4',\n    name: 'Yellow Hornets (User)',\n    logoUrl: placeholderTeamLogo('YH'),\n    coachName: 'Coach Stinger',\n    players: [createPlayer('user-p16', 'Buzz Gold', 10, 'user-team4')],\n  },\n];\n\n\nconst now = new Date();\n\n// Mock matches for user-facing components. Admin panel fetches from Supabase.\nexport const mockMatches: Match[] = [\n  {\n    id: 'match1-user',\n    teamA: exampleTeamsForUserDisplay[0],\n    teamB: exampleTeamsForUserDisplay[1],\n    dateTime: new Date(now.getTime() + 2 * 60 * 60 * 1000),\n    venue: 'Stadium Alpha (User)',\n    status: 'scheduled',\n    events: [],\n  },\n  {\n    id: 'match2-user',\n    teamA: exampleTeamsForUserDisplay[2],\n    teamB: exampleTeamsForUserDisplay[3],\n    dateTime: new Date(now.getTime() - 15 * 60 * 1000),\n    venue: 'Stadium Beta (User)',\n    status: 'live',\n    scoreA: 1,\n    scoreB: 0,\n    lineupA: exampleTeamsForUserDisplay[2].players.slice(0, 5),\n    lineupB: exampleTeamsForUserDisplay[3].players.slice(0, 5),\n    events: [\n      { id: 'e1-user', type: 'goal', time: \"10'\", playerName: 'Ruby Fire', playerId: 'user-p11', teamId: 'user-team3' } as GoalEvent,\n    ],\n  },\n  {\n    id: 'match3-user',\n    teamA: exampleTeamsForUserDisplay[0],\n    teamB: exampleTeamsForUserDisplay[2],\n    dateTime: new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000),\n    venue: 'Stadium Gamma (User)',\n    status: 'completed',\n    scoreA: 2,\n    scoreB: 1,\n    lineupA: exampleTeamsForUserDisplay[0].players.slice(0, 5),\n    lineupB: exampleTeamsForUserDisplay[2].players.slice(0, 5),\n    events: [\n      { id: 'e2-user', type: 'goal', time: \"25'\", playerName: 'Leo Green', playerId: 'user-p1', teamId: 'user-team1' } as GoalEvent,\n      { id: 'e3-user', type: 'goal', time: \"55'\", playerName: 'Ruby Fire', playerId: 'user-p11', teamId: 'user-team3' } as GoalEvent,\n      { id: 'e4-user', type: 'goal', time: \"80'\", playerName: 'Sam Stripes', playerId: 'user-p2', teamId: 'user-team1' } as GoalEvent,\n      { id: 'e5-user', type: 'card', time: \"60'\", playerName: 'Ken Flame (User)', playerId: 'user-p12placeholder', teamId: 'user-team3', cardType: 'yellow', details: 'Foul tackle' } as CardEvent,\n    ],\n  },\n];\n\n// Fallback Tournament Info for components not yet refactored or if Supabase fails.\n// Admin panel and key user pages fetch live data from Supabase.\nexport const mockTournamentInfo: TournamentInfo = {\n  id: 1, // Default ID\n  name: \"Trendy's U13/U16 Championship (Fallback)\",\n  logoUrl: placeholderTeamLogo('TT'),\n  about: \"Welcome to the most exciting youth championship! Trendy's U13/U16 tournament brings together the best young talents to compete for glory. (This is fallback data).\",\n  knockoutImageUrl: `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`,\n};\n\n// Mock Groups for user-facing components. Admin panel will manage via Supabase eventually.\nexport const mockGroups: Group[] = [\n  {\n    id: 'groupA-user',\n    name: 'Group A (User)',\n    teams: [\n      { team: exampleTeamsForUserDisplay[0], played: 1, won: 1, drawn: 0, lost: 0, goalsFor: 2, goalsAgainst: 1, goalDifference: 1, points: 3 },\n      { team: exampleTeamsForUserDisplay[1], played: 0, won: 0, drawn: 0, lost: 0, goalsFor: 0, goalsAgainst: 0, goalDifference: 0, points: 0 },\n    ],\n  },\n  {\n    id: 'groupB-user',\n    name: 'Group B (User)',\n    teams: [\n      { team: exampleTeamsForUserDisplay[2], played: 1, won: 0, drawn: 0, lost: 1, goalsFor: 1, goalsAgainst: 2, goalDifference: -1, points: 0, isLive: true, liveScore: '1-0 vs YH' },\n      { team: exampleTeamsForUserDisplay[3], played: 0, won: 0, drawn: 0, lost: 0, goalsFor: 0, goalsAgainst: 0, goalDifference: 0, points: 0, isLive: true, liveScore: '0-1 vs RD' },\n    ],\n  },\n];\n\n// This function is used by user-facing match details page. Keep it using mockMatches for now.\nexport const getMatchById = (id: string): Match | undefined => {\n  const match = mockMatches.find(m => m.id === id); \n  if (match) {\n    // Ensure players are attached if not explicitly part of mock match lineups\n    const teamAWithPlayers = exampleTeamsForUserDisplay.find(t => t.id === match.teamA.id) || match.teamA;\n    const teamBWithPlayers = exampleTeamsForUserDisplay.find(t => t.id === match.teamB.id) || match.teamB;\n    \n    return { \n        ...match, \n        teamA: {...teamAWithPlayers, players: teamAWithPlayers.players || []},\n        teamB: {...teamBWithPlayers, players: teamBWithPlayers.players || []},\n        events: match.events || [],\n        lineupA: match.lineupA || teamAWithPlayers.players?.slice(0,11) || [], // Fallback lineup\n        lineupB: match.lineupB || teamBWithPlayers.players?.slice(0,11) || [], // Fallback lineup\n    };\n  }\n  return undefined;\n};\n    \n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,sBAAsB,CAAC,OAAiB,CAAC,oDAAoD,EAAE,KAAK,SAAS,CAAC,GAAE,GAAG,WAAW,GAAG,aAAa,CAAC;AAE5J,MAAM,eAAe,CAAC,IAAY,MAAc,aAAqB,UAA4B,CAAC;QAAE;QAAI;QAAM,cAAc;QAAa;IAAQ,CAAC;AAG3I,MAAM,6BAAqC;IAChD;QACE,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YACP,aAAa,WAAW,aAAa,IAAI;YACzC,aAAa,WAAW,eAAe,GAAG;SAC3C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YACP,aAAa,WAAW,YAAY,IAAI;SACzC;IACH;IACC;QACC,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YAAC,aAAa,YAAY,aAAa,GAAG;SAAc;IACnE;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS,oBAAoB;QAC7B,WAAW;QACX,SAAS;YAAC,aAAa,YAAY,aAAa,IAAI;SAAc;IACpE;CACD;AAGD,MAAM,MAAM,IAAI;AAGT,MAAM,cAAuB;IAClC;QACE,IAAI;QACJ,OAAO,0BAA0B,CAAC,EAAE;QACpC,OAAO,0BAA0B,CAAC,EAAE;QACpC,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,KAAK,KAAK;QACjD,OAAO;QACP,QAAQ;QACR,QAAQ,EAAE;IACZ;IACA;QACE,IAAI;QACJ,OAAO,0BAA0B,CAAC,EAAE;QACpC,OAAO,0BAA0B,CAAC,EAAE;QACpC,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK;QAC7C,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,QAAQ;YACN;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAa,UAAU;gBAAY,QAAQ;YAAa;SACjH;IACH;IACA;QACE,IAAI;QACJ,OAAO,0BAA0B,CAAC,EAAE;QACpC,OAAO,0BAA0B,CAAC,EAAE;QACpC,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK;QACtD,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,SAAS,0BAA0B,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;QACxD,QAAQ;YACN;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAa,UAAU;gBAAW,QAAQ;YAAa;YAC/G;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAa,UAAU;gBAAY,QAAQ;YAAa;YAChH;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAe,UAAU;gBAAW,QAAQ;YAAa;YACjH;gBAAE,IAAI;gBAAW,MAAM;gBAAQ,MAAM;gBAAO,YAAY;gBAAoB,UAAU;gBAAuB,QAAQ;gBAAc,UAAU;gBAAU,SAAS;YAAc;SAC/K;IACH;CACD;AAIM,MAAM,qBAAqC;IAChD,IAAI;IACJ,MAAM;IACN,SAAS,oBAAoB;IAC7B,OAAO;IACP,kBAAkB,CAAC,iFAAiF,CAAC;AACvG;AAGO,MAAM,aAAsB;IACjC;QACE,IAAI;QACJ,MAAM;QACN,OAAO;YACL;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB;gBAAG,QAAQ;YAAE;YACxI;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB;gBAAG,QAAQ;YAAE;SACzI;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;YACL;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB,CAAC;gBAAG,QAAQ;gBAAG,QAAQ;gBAAM,WAAW;YAAY;YAC/K;gBAAE,MAAM,0BAA0B,CAAC,EAAE;gBAAE,QAAQ;gBAAG,KAAK;gBAAG,OAAO;gBAAG,MAAM;gBAAG,UAAU;gBAAG,cAAc;gBAAG,gBAAgB;gBAAG,QAAQ;gBAAG,QAAQ;gBAAM,WAAW;YAAY;SAC/K;IACH;CACD;AAGM,MAAM,eAAe,CAAC;IAC3B,MAAM,QAAQ,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAC7C,IAAI,OAAO;QACT,2EAA2E;QAC3E,MAAM,mBAAmB,2BAA2B,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK;QACrG,MAAM,mBAAmB,2BAA2B,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK;QAErG,OAAO;YACH,GAAG,KAAK;YACR,OAAO;gBAAC,GAAG,gBAAgB;gBAAE,SAAS,iBAAiB,OAAO,IAAI,EAAE;YAAA;YACpE,OAAO;gBAAC,GAAG,gBAAgB;gBAAE,SAAS,iBAAiB,OAAO,IAAI,EAAE;YAAA;YACpE,QAAQ,MAAM,MAAM,IAAI,EAAE;YAC1B,SAAS,MAAM,OAAO,IAAI,iBAAiB,OAAO,EAAE,MAAM,GAAE,OAAO,EAAE;YACrE,SAAS,MAAM,OAAO,IAAI,iBAAiB,OAAO,EAAE,MAAM,GAAE,OAAO,EAAE;QACzE;IACF;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabaseClient.ts"],"sourcesContent":["\nimport { createClient, type SupabaseClient } from '@supabase/supabase-js';\nimport type { Database } from '@/types/supabase'; // We will create this file later for types\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Helper type for the mock client's error structure\ntype MockError = { message: string; details: string; hint: string; code: string } | null;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `Supabase URL or anon key is missing. \n      Please check your .env.local file and ensure NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY are set.\n      Falling back to a mock client for development purposes. NO DATA WILL BE SAVED.`\n    );\n\n    const mockSupabase = {\n      from: (tableName: string) => {\n        let currentError: MockError = { message: `Mock Supabase: Query on ${tableName} - no connection`, details: '', hint: '', code: '' };\n        let currentData: any = []; // Default to array for multi-row select\n        let isSingleQuery = false;\n\n        const builder = {\n          select: function(columns: string = '*') {\n            // console.warn(`Mock Supabase: .select(\"${columns}\") called on ${tableName}`);\n            currentData = isSingleQuery ? null : [];\n            currentError = { message: `Mock Supabase: select on ${tableName} - no connection`, details: '', hint: '', code: '' };\n            if (isSingleQuery && currentData === null) {\n              currentError.message = `Mock Supabase: single select on ${tableName} - no connection`;\n            }\n            return this;\n          },\n          insert: function(rowData: any) {\n            // console.warn(`Mock Supabase: .insert() called on ${tableName}`);\n            // For insert().select().single(), Supabase returns the inserted object (or first if array)\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null; // Simulate successful insert for mock\n            isSingleQuery = true; // insert().select().single() implies single result\n            return this;\n          },\n          update: function(rowData: any) {\n            // console.warn(`Mock Supabase: .update() called on ${tableName}`);\n            const dataToReturn = Array.isArray(rowData) ? (rowData[0] || {}) : (rowData || {});\n            currentData = dataToReturn;\n            currentError = null;\n            isSingleQuery = true;\n            return this;\n          },\n          delete: function() {\n            // console.warn(`Mock Supabase: .delete() called on ${tableName}`);\n            currentData = []; // Supabase delete often returns the deleted items\n            currentError = null;\n            isSingleQuery = false; // delete can affect multiple, but select might follow\n            return this;\n          },\n          order: function(column: string, options?: { ascending?: boolean; nullsFirst?: boolean }) {\n            console.warn(`Mock Supabase: .order() called on ${tableName} for ${column}. Data will not actually be ordered.`);\n            return this;\n          },\n          eq: function(column: string, value: any) {\n            console.warn(`Mock Supabase: .eq() called on ${tableName} for ${column}=${value}. Data will not actually be filtered.`);\n            // if (isSingleQuery) { // If .single() was called before .eq(), this might adjust currentData based on a mock scenario\n            //    currentData = null; // Reset if filter means no match\n            // }\n            return this;\n          },\n          single: function() {\n            // console.warn(`Mock Supabase: .single() called on ${tableName}`);\n            isSingleQuery = true;\n            currentData = null; \n            currentError = { message: `Mock Supabase: single select on ${tableName} - no record found or connection error`, details: '', hint: '', code: '' };\n            return this;\n          },\n          // Make the builder thenable (awaitable)\n          then: function(onFulfilled: (value: { data: any; error: MockError; }) => void, onRejected?: (reason: any) => void) {\n            let resultData = isSingleQuery ? currentData : currentData;\n            if (isSingleQuery && resultData === undefined) resultData = null;\n            if (!isSingleQuery && resultData === undefined) resultData = [];\n            \n            // if single and error, data should be null (Supabase behavior)\n            if(isSingleQuery && currentError && resultData !== null) {\n                 // resultData = null; // Be careful with this, as sometimes Supabase returns partial data + error\n            }\n\n            const result = { data: resultData, error: currentError };\n            // console.log(`Mock promise for ${tableName} resolving with:`, JSON.stringify(result));\n            return Promise.resolve(result).then(onFulfilled, onRejected);\n          },\n          catch: function(onRejected: (reason: any) => void) {\n            // Ensure then is defined if catch is called directly on the builder.\n            // This is a simplified catch. A full promise implementation would be more complex.\n            return this.then(undefined, onRejected);\n          }\n        };\n        return builder;\n      },\n      storage: {\n        from: (bucket: string) => ({\n            upload: async (path: string, file: File | Blob, options?: any) => {\n                 console.warn(`Mock Supabase Storage: .upload() called for bucket ${bucket}. File will not be uploaded.`);\n                 return ({ data: { path: `mock/${bucket}/${path}` }, error: null });\n            },\n            getPublicUrl: (path: string) => {\n                console.warn(`Mock Supabase Storage: .getPublicUrl() called for path ${path} in bucket ${bucket}.`);\n                return ({ data: { publicUrl: `https://placehold.co/128x128.png?text=MOCK` } });\n            },\n        }),\n      }\n    };\n    globalThis.supabaseClientInstance = mockSupabase as any as SupabaseClient<Database>;\n  } else {\n    throw new Error(\"Supabase URL and anon key are required. Application cannot start in production without them.\");\n  }\n} else {\n   globalThis.supabaseClientInstance = createClient<Database>(supabaseUrl, supabaseAnonKey);\n}\n\nexport const supabase = globalThis.supabaseClientInstance;\n"],"names":[],"mappings":";;;AACA;;AAGA,MAAM;AACN,MAAM;AAKN,uCAAsC;;AA0GtC,OAAO;IACJ,WAAW,sBAAsB,GAAG,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAY,aAAa;AAC3E;AAEO,MAAM,WAAW,WAAW,sBAAsB","debugId":null}},
    {"offset": {"line": 1107, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28user%29/tournament/page.tsx"],"sourcesContent":["\nimport React from 'react';\nimport Image from 'next/image';\nimport TournamentHeader from '@/components/user/tournament/TournamentHeader';\nimport GroupTable from '@/components/user/tournament/GroupTable';\nimport { mockGroups, placeholderTeamLogo } from '@/lib/data'; // mockGroups for now, will be replaced\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport type { Metadata } from 'next';\nimport { supabase } from '@/lib/supabaseClient';\nimport type { TournamentInfo } from '@/types';\n\n// This function fetches data at build time or on demand for SSR/ISR\nasync function getTournamentPageData() {\n  let tournamentInfo: TournamentInfo | null = null;\n  \n  const { data: settingsData, error: settingsError } = await supabase\n    .from('tournament_settings')\n    .select('*')\n    .eq('id', 1)\n    .single();\n\n  if (settingsError || !settingsData) {\n    console.error(\"Error fetching tournament settings for user page:\", settingsError?.message);\n    // Fallback to a default structure if Supabase fetch fails\n    tournamentInfo = { \n        name: \"Tournament Tracker\", \n        about: \"Details about the tournament will appear here soon.\",\n        logoUrl: placeholderTeamLogo(\"TT\"),\n        knockoutImageUrl: `https://placehold.co/800x500/F0FAF4/50C878.png?text=Knockout+Diagram&font=poppins`\n    };\n  } else {\n    tournamentInfo = settingsData as TournamentInfo;\n  }\n\n  // For now, groups are still mock. This would be fetched from Supabase in a future step.\n  const groups = mockGroups; \n\n  return { tournamentInfo, groups };\n}\n\nexport async function generateMetadata(): Promise<Metadata> {\n  const { tournamentInfo } = await getTournamentPageData();\n  return {\n    title: `${tournamentInfo?.name || 'Tournament Overview'} | Trendy's Tournament Tracker`,\n    description: `View tournament details, group standings, and progression for ${tournamentInfo?.name || 'the tournament'}.`,\n  };\n}\n\n\nexport default async function TournamentPage() {\n  const { tournamentInfo, groups } = await getTournamentPageData();\n\n  if (!tournamentInfo) {\n    // This case should ideally be handled by the fallback in getTournamentPageData\n    return <div className=\"container mx-auto py-8 px-4 text-center\">Error loading tournament information.</div>;\n  }\n\n  return (\n    <div className=\"container mx-auto py-8 px-4\">\n      <TournamentHeader info={tournamentInfo} />\n      \n      <h2 className=\"text-2xl font-headline font-bold mb-6 text-center md:text-left\">Group Standings</h2>\n      <p className=\"text-muted-foreground mb-6 text-center md:text-left\">\n        Group standings are currently using placeholder data and will be updated with live data soon.\n      </p>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n        {groups.map((group) => (\n          <GroupTable key={group.id} group={group} />\n        ))}\n      </div>\n\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-xl\">Knockout Stage Progression</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {tournamentInfo.knockoutImageUrl ? (\n            <div className=\"relative w-full aspect-[16/10] md:aspect-[16/9] rounded-lg overflow-hidden border-2 border-muted bg-muted/20\">\n              <Image \n                src={tournamentInfo.knockoutImageUrl} \n                alt=\"Tournament knockout stage progression diagram\" \n                fill={true}\n                style={{objectFit: \"contain\"}}\n                data-ai-hint=\"diagram chart\" \n              />\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center h-64 border-2 border-dashed border-muted rounded-lg bg-muted/20\">\n              <p className=\"text-muted-foreground\">Tournament progression diagram coming soon!</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA,sMAA8D,uCAAuC;AACrG;AAEA;;;;;;;;AAGA,oEAAoE;AACpE,eAAe;IACb,IAAI,iBAAwC;IAE5C,MAAM,EAAE,MAAM,YAAY,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,4HAAA,CAAA,WAAQ,CAChE,IAAI,CAAC,uBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,GACT,MAAM;IAET,IAAI,iBAAiB,CAAC,cAAc;QAClC,QAAQ,KAAK,CAAC,qDAAqD,eAAe;QAClF,0DAA0D;QAC1D,iBAAiB;YACb,MAAM;YACN,OAAO;YACP,SAAS,CAAA,GAAA,kHAAA,CAAA,sBAAmB,AAAD,EAAE;YAC7B,kBAAkB,CAAC,iFAAiF,CAAC;QACzG;IACF,OAAO;QACL,iBAAiB;IACnB;IAEA,wFAAwF;IACxF,MAAM,SAAS,kHAAA,CAAA,aAAU;IAEzB,OAAO;QAAE;QAAgB;IAAO;AAClC;AAEO,eAAe;IACpB,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM;IACjC,OAAO;QACL,OAAO,GAAG,gBAAgB,QAAQ,sBAAsB,8BAA8B,CAAC;QACvF,aAAa,CAAC,8DAA8D,EAAE,gBAAgB,QAAQ,iBAAiB,CAAC,CAAC;IAC3H;AACF;AAGe,eAAe;IAC5B,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,GAAG,MAAM;IAEzC,IAAI,CAAC,gBAAgB;QACnB,+EAA+E;QAC/E,qBAAO,8OAAC;YAAI,WAAU;sBAA0C;;;;;;IAClE;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4JAAA,CAAA,UAAgB;gBAAC,MAAM;;;;;;0BAExB,8OAAC;gBAAG,WAAU;0BAAiE;;;;;;0BAC/E,8OAAC;gBAAE,WAAU;0BAAsD;;;;;;0BAGnE,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,sJAAA,CAAA,UAAU;wBAAgB,OAAO;uBAAjB,MAAM,EAAE;;;;;;;;;;0BAI7B,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAwB;;;;;;;;;;;kCAE/C,8OAAC,gIAAA,CAAA,cAAW;kCACT,eAAe,gBAAgB,iBAC9B,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAK,eAAe,gBAAgB;gCACpC,KAAI;gCACJ,MAAM;gCACN,OAAO;oCAAC,WAAW;gCAAS;gCAC5B,gBAAa;;;;;;;;;;iDAIjB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnD","debugId":null}}]
}